/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.hursun__wrapper, .hursun, .spotify__wrapper, .spotify, .skills__wrapper, .skills, .work, .home, .content, body, html {
  height: 100%;
  left: 0;
  object-fit: cover;
  position: absolute;
  top: 0;
  width: 100%;
}

.dg.ac {
  z-index: 99999 !important;
}

@font-face {
  font-family: "Bebas Neue";
  src: url(cf44d2c44a2408c82752.woff2) format("woff2"), url(16888f91cccc75fe2f3c.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Julius Sans One";
  src: url(f68f62ef86f2811bdd9d.woff2) format("woff2"), url(78799505ca742fd672fa.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Nothing You Could Do";
  src: url(9083f5add73d1b557dea.woff2) format("woff2"), url(b627042e5cb21150cd28.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(72b398af40ae6768ab99.woff2) format("woff2"), url(3155f256200b7d559607.woff) format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(827bdec59c41f1f388f4.woff2) format("woff2"), url(3db1a9575b6c29f62162.woff) format("woff");
  font-weight: 600;
  font-style: italic;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(33eb0bfb55ec28115f71.woff2) format("woff2"), url(2451e96bc4c62e5ad1d0.woff) format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(293820371ca99ec04459.woff2) format("woff2"), url(4a3d63613a362f90a9e6.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
  overflow-x: hidden;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  background-color: #000000;
}

body::-webkit-scrollbar {
  width: 0.5rem;
}

body::-webkit-scrollbar-thumb {
  background-color: #D2001A;
  border-radius: 10px;
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
}

button {
  color: inherit;
  background: none;
  cursor: pointer;
  outline: none;
  border: none;
}

.load__screen {
  position: relative;
  padding-left: 0;
  padding-top: 0;
  padding-right: 0;
  background-color: #101010;
  width: 0%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
}

.load__screen__img {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 50%;
}

.load__container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  z-index: 10;
  pointer-events: none;
}

.content {
  z-index: 1;
  padding-top: 9rem;
}

canvas {
  position: fixed;
  left: 0;
  top: 0;
  outline: none;
}

.cursor {
  position: absolute;
  background-color: #D2001A;
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
  z-index: 8;
  pointer-events: none;
  overflow: hidden;
}
@media (max-width: 767px) {
  .cursor {
    display: none;
  }
}

.cursor.active {
  width: 15rem;
  height: 15rem;
  background-color: transparent;
  backdrop-filter: invert(1) grayscale(1);
}

[data-animation=title] span,
[data-animation=paragraph] span,
[data-animation=label] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.works__content__btn, .works__content__content, .header__header__item, .preloader__header__location {
  font-size: 3.2rem;
  font-family: "Bebas Neue";
}

.preloader__title {
  font-size: 4rem;
  font-family: "Bebas Neue";
}

.hursun__detail__title, .skills__point__title, .home__interesting__para, .home__intro__span, .preloader__btn p {
  font-size: 6.4rem;
  font-family: "Bebas Neue";
}
@media (max-width: 767px) {
  .hursun__detail__title, .skills__point__title, .home__interesting__para, .home__intro__span, .preloader__btn p {
    font-size: 5.4rem;
  }
}

.works__container__title, .work__title, .preloader__header__name {
  font-size: 9.6rem;
  font-family: "Bebas Neue";
}

.home__intro__greeting, .home__hero__title, .header__menu__item, .preloader__loading__percentage {
  font-size: 12.8rem;
  font-family: "Bebas Neue";
}

.skills__title, .home__contact__email {
  font-size: 20rem;
  font-family: "Bebas Neue";
}

.home__hero__text {
  font-family: "Nothing You Could Do";
  font-size: 15rem;
}

.skills__skill__name, .header__time {
  font-family: "Julius Sans One";
  font-size: 2.2rem;
}

.skills__point__number, .home__contact__msg, .about__social__item {
  font-family: "Julius Sans One";
  font-size: 3.2rem;
}

.header__menu__stuffs {
  font-family: "Julius Sans One";
  font-size: 6.4rem;
}

.home__contact__email, .about__social__item, .header__menu__item, .spotify__hero__btn, .about__made__me, .interesting__works__title {
  display: inline-block;
  overflow: hidden;
  position: relative;
  vertical-align: top;
}

.home__contact__email:after, .about__social__item:after, .header__menu__item:after, .spotify__hero__btn:after, .about__made__me:after, .interesting__works__title:after {
  background: currentColor;
  bottom: 0;
  content: "";
  height: 1px;
  left: 0;
  position: absolute;
  transition: transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
  width: 100%;
}

.home__contact__email:hover:after, .about__social__item:hover:after, .header__menu__item:hover:after, .spotify__hero__btn:after, .about__made__me:after, .interesting__works__title:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.home__contact__email:after, .about__social__item:after, .header__menu__item:after, .spotify__hero__btn:hover:after, .about__made__me:hover:after, .interesting__works__title:hover:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.spotify__hero__btn, .about__made__me, .interesting__works__title {
  display: inline-block;
}
.home__contact__email, .about__social__item, .header__menu__item {
  display: inline-block;
}
.music__title__name, .spotify__hero__btn {
  font-size: 2.4rem;
  font-family: "Montserrat";
  font-weight: 600;
}

.music__item__duration, .music__title__artist {
  font-size: 1.8rem;
  font-family: "Montserrat";
  font-weight: 400;
}

.home__intro__introduction {
  font-size: 9.6rem;
  font-family: "Montserrat";
  font-style: italic;
  font-weight: 600;
}

.spotify__hero__title, .home__hobby__title, .interesting__works__title {
  font-size: 9.6rem;
  font-family: "Montserrat";
  font-weight: 700;
}
@media (max-width: 767px) {
  .spotify__hero__title, .home__hobby__title, .interesting__works__title {
    font-size: 7.6rem;
  }
}

.home__hero__para {
  font-size: 3.6rem;
  font-family: "Montserrat";
  font-weight: 500;
}

.spotify__hero__description, .home____thanks__msg, .home__hobby__para, .home__bar__text, .home__index {
  font-size: 3.6rem;
  font-family: "Montserrat";
  font-weight: 400;
  line-height: 5rem;
}

.works__content__text, .home__about__journey, .interesting__works__para {
  font-size: 2.8rem;
  font-family: "Montserrat";
  font-weight: 400;
}

.works__content__description, .home__made__para {
  font-size: 3.2rem;
  font-family: "Montserrat";
  font-weight: 400;
}

.about__made__me, .about__made__title, .about__social__title {
  font-size: 4rem;
  font-family: "Montserrat";
  font-weight: 700;
}

.preloader {
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: #000000;
  color: #ffffff;
  z-index: 100;
}

.preloader__wrapper {
  width: 100%;
  height: 100%;
  padding: 5rem;
  position: relative;
}

.preloader__header {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-start;
}

.preloader__header__sub {
  display: flex;
  align-items: center;
  gap: 2em;
}

.preloader__header__line {
  display: block;
  width: 0.2rem;
  height: 10rem;
  background-color: #ffffff;
}

.preloader__header__location {
  letter-spacing: 1rem;
}

.preloader__title {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  letter-spacing: 1rem;
  text-align: center;
}

.preloader__header__circle {
  width: 5rem;
  height: 5rem;
  background-color: #ffffff;
  display: block;
  border-radius: 50%;
}

.preloader__loading__bar {
  display: block;
  position: absolute;
  right: 6rem;
  bottom: 5rem;
  width: 2.8rem;
  max-height: 90%;
  height: 0%;
  background-color: #ffffff;
  transition: 0.35s ease;
}

.preloader__loading__percentage {
  position: absolute;
  right: 15rem;
  bottom: 5rem;
}

.preloader__btn {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 20rem;
  height: 20rem;
  border-radius: 50%;
  border: #D2001A 0.5rem solid;
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 1;
  opacity: 0;
  cursor: pointer;
}
.preloader__btn:after {
  position: absolute;
  content: "";
  z-index: 2;
  display: block;
  width: 19rem;
  height: 19rem;
  border-radius: 50%;
  border-left: #000000 2rem solid;
  animation: preloader-btn-animation 2s infinite forwards;
}
@keyframes preloader-btn-animation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.header {
  position: fixed;
  width: 100%;
  height: 8rem;
  color: #ffffff;
  padding: 0px 5rem;
  z-index: 5;
}

.header__wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid #ffffff;
}

.header__header {
  display: flex;
  align-items: flex-end;
  gap: 1rem;
}

.header__header__item {
  cursor: pointer;
  position: relative;
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}
.header__header__item:after {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 1px;
  width: 100%;
  content: "";
  background-color: #ffffff;
  transform: scaleX(0);
  transform-origin: right center;
  transition: transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
}
.header__header__item:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.header__header__line {
  display: block;
  width: 0.2rem;
  height: 5rem;
  background-color: #ffffff;
}

.header__time {
  text-transform: uppercase;
}

.audio__play {
  display: flex;
  flex-direction: row;
  align-items: flex-end;
  justify-content: space-evenly;
  width: 5rem;
  height: 5rem;
  cursor: pointer;
}
.audio__play__span {
  display: block;
  width: 0.3rem;
  max-height: 2rem;
  height: 25%;
  background-color: #ffffff;
}
.audio__play__span.active:nth-of-type(1) {
  height: 25%;
  animation: musicAnimation infinite 2s linear;
}
.audio__play__span.active:nth-of-type(2) {
  height: 25%;
  animation: musicAnimation infinite 2s linear 2s;
}
.audio__play__span.active:nth-of-type(3) {
  height: 25%;
  animation: musicAnimation infinite 2s linear 6s;
}
.audio__play__span.active:nth-of-type(4) {
  height: 25%;
  animation: musicAnimation infinite 2s linear 7s;
}
.audio__play__span.active:nth-of-type(5) {
  height: 25%;
  animation: musicAnimation infinite 2s linear 4s;
}

@keyframes musicAnimation {
  0% {
    height: 0;
  }
  15% {
    height: 25%;
  }
  30% {
    height: 50%;
  }
  45% {
    height: 100%;
  }
  60% {
    height: 75%;
  }
  75% {
    height: 25%;
  }
  90% {
    height: 50%;
  }
  100% {
    height: 0;
  }
}
.header__menu__button {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
  background-color: #ffffff;
  display: flex;
  align-items: center;
  justify-content: center;
}

.header__menu {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  transition: 0.3s ease-out;
  overflow: hidden;
}

.header__menu.active {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 0;
  transition: 0.3s ease-in;
}
.header__menu.active .header__menu__item {
  display: block;
}
.header__menu.active .header__menu__wrapper {
  display: flex;
}
.header__menu.active .header__menu__shadow {
  display: block;
}

.header__menu__item {
  color: #ffffff;
  display: none;
  transition: 0.3s ease-in-out;
}

.header__menu__item:hover {
  color: red;
}

.header__menu__wrapper {
  display: none;
  width: 100%;
  height: 100%;
  padding: 10rem;
  flex-direction: row;
  align-items: center;
  gap: 5rem;
}
@media (max-width: 767px) {
  .header__menu__wrapper {
    flex-direction: column-reverse;
    align-items: center;
    justify-content: center;
  }
}

.header__menu__items {
  gap: 10rem;
  z-index: 1;
  flex: 1;
}

.header__menu__stuffs {
  color: #ffffff;
  z-index: 1;
}

.header__menu__shadow {
  display: none;
  position: absolute;
  right: -10rem;
  top: -10rem;
  width: 50rem;
  height: 50rem;
  border-radius: 50%;
  background-color: red;
  box-shadow: 1rem 1rem 5000rem 30rem red;
}

.home {
  overflow: hidden;
}

.home__wrapper {
  color: #ffffff;
}
.home__wrapper section {
  padding: 10rem 16rem 5rem 16rem;
}
@media (max-width: 767px) {
  .home__wrapper section {
    padding: 10rem 5rem 5rem 5rem;
  }
}

.home__hero {
  position: relative;
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.home__hero__wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.home__hero__title {
  color: #ffffff;
  overflow: hidden;
}
.home__hero__title:nth-of-type(1) {
  animation: home__title__animaition 8s infinite ease;
}

.home__hero__text {
  width: 300vw;
  top: 40%;
  left: -200%;
  position: absolute;
  color: #D2001A;
  animation: home__hero__textAnimate 8s ease-in-out infinite 5s;
}

.home__hero__para {
  position: absolute;
  bottom: 0;
  right: 10%;
  color: #ffffff;
  padding-bottom: 10rem;
}

.home__bar {
  position: absolute;
  bottom: 0;
  left: -10%;
  width: 1000%;
  height: 9rem;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 1rem;
  border: 2px solid #ffffff;
}

.home__bar__text {
  color: #ffffff;
  text-align: center;
}

@keyframes home__title__animaition {
  0% {
    width: 0%;
  }
  50% {
    width: 100%;
  }
  100% {
    width: 0%;
  }
}
@keyframes home__hero__textAnimate {
  from {
    left: -300%;
  }
  to {
    left: 100%;
  }
}
.home__intro {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  gap: 2rem;
  padding-top: 13rem;
  border-bottom: 0.3rem solid #ffffff;
  position: relative;
}

.home__intro__greeting {
  overflow: hidden;
}

.home__intro__introduction {
  width: 80%;
  z-index: 1;
}

.home__intro__image {
  position: absolute;
  right: 0%;
  top: 5%;
  width: 20%;
  max-height: 90%;
}
@media (max-width: 767px) {
  .home__intro__image {
    width: 50%;
  }
}

.home__intro__span {
  border-bottom: 0.5rem solid #D2001A;
}

.home__interesting {
  width: 100%;
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(3, 1fr);
  border-bottom: 0.3rem solid #ffffff;
}
@media (max-width: 767px) {
  .home__interesting {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
  }
}

.home__interesting__para {
  grid-column-start: 4;
  grid-column-end: 13;
  overflow: hidden;
}
.home__interesting__para:nth-of-type(2) {
  grid-row-start: 2;
  grid-row-end: 3;
}

.home__interesting__works {
  display: flex;
  grid-column-start: 4;
  grid-column-end: 13;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
}

.interesting__works__title {
  cursor: pointer;
}

.interesting__works__para {
  width: 50%;
}

.home__about {
  width: 100%;
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(3, 1fr);
  position: relative;
  border-bottom: 0.3rem solid #ffffff;
}
@media (max-width: 767px) {
  .home__about {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
  }
}

.home__about__social {
  grid-column-start: 2;
  grid-row-start: 2;
  gap: 3.2rem;
  display: flex;
  flex-direction: column;
}

.about__social__title {
  overflow: hidden;
}

.about__social__item {
  cursor: pointer;
}

.home__about__journey {
  grid-column-start: 4;
  grid-column-end: 9;
  grid-row-start: 2;
  padding: 0.2rem;
  overflow: hidden;
  word-spacing: 0.2rem;
}

.home__about__made {
  grid-column-start: 10;
  grid-column-end: 13;
  grid-row-start: 2;
  gap: 1rem;
}

.about__made__me {
  grid-row-start: 10;
  text-transform: uppercase;
  cursor: pointer;
}

.home__hobby {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: flex-start;
  width: 100%;
  height: 100vh;
  border-bottom: 0.3rem solid #ffffff;
}

.hobby__container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
}

.home__hobby__para {
  width: 40%;
}

.home__contact {
  width: 100%;
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(4, 1fr);
  align-items: center;
  position: relative;
}
@media (max-width: 767px) {
  .home__contact {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: flex-start;
  }
}

.home__contact__msg {
  grid-column-start: 2;
  grid-column-end: 5;
  grid-row-start: 1;
}
.home__contact__msg:nth-last-of-type(2) {
  grid-column-start: 7;
  grid-column-end: 10;
}

.home__contact__email {
  grid-column-start: 1;
  grid-column-end: 10;
  grid-row-start: 2;
  cursor: pointer;
  overflow: hidden;
}
@media (max-width: 767px) {
  .home__contact__email {
    font-size: 8rem;
  }
}

.home____thanks__msg {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 3;
  text-transform: uppercase;
  overflow: hidden;
}

.home__thanks__social {
  display: flex;
  flex-direction: row;
  grid-row-start: 4;
  grid-column-start: 1;
  gap: 5rem;
}

.home__end {
  display: flex;
  width: 100%;
  height: 100vh;
  position: relative;
  opacity: 0;
  transition: opacity 4s ease-in;
}
.home__end.active {
  opacity: 1;
}

.home__end__points {
  position: absolute;
  width: 2rem;
  height: 2rem;
  background-color: #ffffff;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  color: #000000;
  font-family: "Montserrat";
  cursor: pointer;
}
.home__end__points:first-child {
  top: 20%;
  left: 48%;
}
.home__end__points:nth-child(2) {
  top: 40%;
  left: 60%;
}
.home__end__points:nth-child(3) {
  top: 70%;
  left: 45%;
}
.home__end__points:last-child {
  top: 50%;
  left: 50%;
}

.work {
  overflow: hidden;
  background-color: rgba(0, 0, 0, 0.5);
}

.work__wrapper {
  overflow: hidden;
  padding: 10rem 5rem 70rem 5rem;
}

.work__title {
  color: #ffffff;
  margin-bottom: 5rem;
}

.work__works__container {
  display: flex;
  flex-direction: column;
  margin: 5rem;
  border-bottom: 0.4rem solid #ffffff;
}

.works__container__title {
  color: #ffffff;
  cursor: pointer;
  position: relative;
}

.works__container__line {
  height: 2rem;
  width: 100%;
  display: block;
}

.works__container__line__path {
  stroke: #ffffff;
  fill: none;
}

.works__container__content {
  height: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  width: 50%;
  transition: 2s ease;
  opacity: 0;
  background-color: rgba(0, 0, 0, 0.5);
  color: #ffffff;
  padding: 2rem;
}
@media (max-width: 767px) {
  .works__container__content {
    width: 90%;
  }
}

.works__content__item {
  display: flex;
  flex-direction: row;
  gap: 2rem;
}

.work__works__container:hover .works__container__content {
  opacity: 1;
  height: 40vh;
}

.works__content__btn {
  width: 10rem;
  height: 10rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 1rem;
  background-color: #000000;
  color: #ffffff;
  transition: 0.35s ease-in-out;
}
.works__content__btn:hover {
  background-color: #D2001A;
  color: #000000;
}

.skills {
  overflow: hidden;
}

.skills__wrapper {
  overflow: hidden;
  padding: 15rem;
  display: flex;
}
@media (max-width: 767px) {
  .skills__wrapper {
    padding: 8rem;
  }
}

.skills__title {
  color: #ffffff;
}

.skills__point {
  position: absolute;
  width: 5rem;
  height: 5rem;
  background-color: #ffffff;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: 0.35 ease-in-out;
  left: 50%;
  top: 30%;
}

.skills__point:hover .skills__point__container {
  opacity: 1;
}

.skills__point.visible {
  opacity: 1;
}

.skills__point__container {
  position: absolute;
  display: flex;
  flex-direction: column;
  transition: 0.35s ease;
  opacity: 0;
  left: 100%;
  z-index: 2;
  background-color: rgba(0, 0, 0, 0.5);
}

.skills__point__title {
  color: #ffffff;
}

.skills__point__skill {
  display: flex;
  align-items: center;
  padding: 1rem;
  gap: 1rem;
}

.skills__skill__name {
  color: #ffffff;
}

.skills__skill__image {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
}

.gallery__scroll__images {
  height: 11200px;
  opacity: 1;
}

.gallery__images__image {
  display: block;
  object-fit: contain;
  width: 100%;
  height: 100%;
}

#headlines {
  position: absolute;
  max-width: 800px;
  min-width: 450px;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

#detail {
  position: absolute;
  width: 100%;
  height: 100%;
  background: #111;
  top: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  z-index: 3;
  justify-content: space-evenly;
}

#detailImg {
  width: 85%;
  height: 85%;
  object-fit: contain;
}

#detailTxt {
  color: #ccc;
  font-size: 20px;
  letter-spacing: 1px;
}

.spotify {
  overflow: hidden;
}

.spotify__wrapper {
  display: flex;
  flex-direction: row;
  color: #ffffff;
  padding: 10rem 5rem;
}
@media (max-width: 767px) {
  .spotify__wrapper {
    padding: 5rem;
    flex-direction: column;
  }
}

.spotify__hero {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  gap: 4rem;
}
@media (max-width: 767px) {
  .spotify__hero {
    gap: 2rem;
    align-items: center;
  }
}

.spotify__hero__image {
  width: 60rem;
  height: 30rem;
}

@media (max-width: 767px) {
  .spotify__hero__title {
    text-align: center;
  }
}

.spotify__hero__btn {
  cursor: pointer;
}

.spotify__musics {
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 2;
}

.spotify__musics__wrapper {
  background-color: #171414;
  width: 60%;
  height: 90%;
  border-radius: 5rem;
  padding: 2rem 2rem;
  overflow-x: hidden;
  overflow-y: scroll;
}
@media (max-width: 767px) {
  .spotify__musics__wrapper {
    width: 80%;
  }
}
.spotify__musics__wrapper::-webkit-scrollbar {
  width: 0.3rem;
  height: 90%;
}
.spotify__musics__wrapper::-webkit-scrollbar-thumb {
  background-color: #D2001A;
  border-radius: 1rem;
}

.spotify__musics__item {
  height: 10rem;
  width: 100%;
  border-bottom: 0.2rem solid #ffffff;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.music__item__image {
  object-fit: cover;
  border-radius: 50%;
  width: 6rem;
  height: 6rem;
  margin-right: 2rem;
}

.music__item__title {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  min-width: 30rem;
}
@media (max-width: 767px) {
  .music__item__title {
    min-width: 25rem;
  }
}

.music__item__duration {
  margin-right: 10rem;
}

.music__item__play {
  width: 5rem;
  height: 5rem;
  cursor: pointer;
}

.hursun__wrapper {
  padding: 10rem 5rem 5rem 20rem;
}

.hursun__grid {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 1.5rem;
}

.grid__container__item {
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.29);
  border-radius: 1rem;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(14px);
  -webkit-backdrop-filter: blur(14px);
  border: 1px solid rgb(255, 255, 255);
}
.grid__container__item:nth-child(1):hover .hursun__detail__title {
  transform: scale(2);
  opacity: 1;
}
.grid__container__item:nth-child(2):hover .hursun__detail__title {
  transform: scale(2);
  opacity: 1;
}
.grid__container__item:nth-child(3):hover .hursun__detail__title {
  transform: scale(2);
  opacity: 1;
}
.grid__container__item:nth-child(4):hover .hursun__detail__title {
  transform: scale(2);
  opacity: 1;
}
.grid__container__item:nth-child(5):hover .hursun__detail__title {
  transform: scale(2);
  opacity: 1;
}
.grid__container__item:nth-child(6):hover .hursun__detail__title {
  transform: scale(2);
  opacity: 1;
}
.grid__container__item:nth-child(7):hover .hursun__detail__title {
  transform: scale(2);
  opacity: 1;
}
.grid__container__item:nth-child(8):hover .hursun__detail__title {
  transform: scale(2);
  opacity: 1;
}
.grid__container__item:nth-child(9):hover .hursun__detail__title {
  transform: scale(2);
  opacity: 1;
}

.hursun__detail__title {
  position: absolute;
  color: #ffffff;
  top: 50%;
  left: 50%;
  width: 100%;
  z-index: 2;
  opacity: 0;
  transition: 0.35s ease;
  transform: scale(1) translate(-50%, -50%);
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7RUFhQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUNDRDs7QURDQTtBQUNBOztFQUVDO0FDRUQ7O0FEQUE7RUFDQztBQ0dEOztBRERBO0VBQ0M7QUNJRDs7QURGQTtFQUNDO0FDS0Q7O0FESEE7O0VBRUM7RUFDQTtBQ01EOztBREpBO0VBQ0M7RUFDQTtBQ09EOztBQ2hEQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBRG1ESjs7QUV6REE7RUFDSTtBRjRESjs7QUc3REE7RUFDSSx5QkNLUztFREpUO0VBR0E7RUFDQTtFQUNBO0FIOERKO0FHM0RBO0VBQ0ksOEJDSlU7RURLVjtFQUVBO0VBQ0E7RUFDQTtBSDRESjtBR3pEQTtFQUNJLG1DQ1pXO0VEYVg7RUFFQTtFQUNBO0VBQ0E7QUgwREo7QUd2REE7RUFDSSx5QkNwQlE7RURxQlI7RUFFQTtFQUNBO0VBQ0E7QUh3REo7QUdyREE7RUFDSSx5QkM3QlE7RUQ4QlI7RUFFQTtFQUNBO0VBQ0E7QUhzREo7QUduREE7RUFDSSx5QkN0Q1E7RUR1Q1I7RUFFQTtFQUNBO0VBQ0E7QUhvREo7QUdqREE7RUFDSSx5QkMvQ1E7RURnRFI7RUFFQTtFQUNBO0VBQ0E7QUhrREo7QUsvR0E7RUFDSTtFQUNBO0FMaUhKOztBSzdHQTtFQUVJO0VBSUE7QUw0R0o7QU1xYkk7RUR2aUJKO0lBSVE7RUxrSE47QUFDRjs7QUs3R0E7RUFFSSx5QkRMVTtBSm9IZDs7QUs1R0E7RUFDSTtBTCtHSjs7QUs1R0E7RUFDSSx5QkRYUTtFQ1lSO0FMK0dKOztBSzNHQTtFQUNJO0VBQ0E7RUFDQTtBTDhHSjs7QUszR0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FMOEdKOztBSzNHQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUw4R0o7O0FLM0dBO0VBQ0k7RUFDRDtFQUNBO0VBQ0E7RUFDQTtBTDhHSDs7QUszR0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FMOEdKOztBSzNHQTtFQUVJO0VBQ0E7QUw2R0o7O0FLMUdBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QUw2R0o7O0FLMUdBO0VBQ0k7RUFDQSx5QkQ5RVE7RUMrRVI7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FMNkdKO0FNNlZJO0VEbGRKO0lBV1E7RUw4R047QUFDRjs7QUsxR0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBTDZHSjs7QUt0R0k7OztFQUNJO0VBQ0E7RUFDQTtBTDJHUjs7QU9wT0E7RUFDSTtFQUNBLHlCSElTO0FKbU9iOztBT3BPQTtFQUNBO0VBQ0EseUJIRGE7QUp3T2I7O0FPcE9BO0VBQ0k7RUFDQSx5QkhOUztBSjZPYjtBTTBUSTtFQ25pQko7SUFLUTtFUHdPTjtBQUNGOztBT3JPQTtFQUNJO0VBQ0EseUJIZlM7QUp1UGI7O0FPck9BO0VBQ0k7RUFDQSx5QkhwQlM7QUo0UGI7O0FPaE9BO0VBQ0k7RUFDQSx5Qkg5QlM7QUppUWI7O0FRdlFBO0VBQ0ksbUNKT1c7RUlOWDtBUjBRSjs7QVM1UUE7RUFDSSw4QkxNVTtFS0xWO0FUK1FKOztBUzVRQTtFQUNJLDhCTENVO0VLQVY7QVQrUUo7O0FTNVFBO0VBQ0ksOEJMSlU7RUtLVjtBVCtRSjs7QVUzUkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBVjhSSjs7QVUzUkU7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FWOFJKOztBVTNSRTtFQUNFO0VBQ0E7QVY4Uko7O0FVM1JFO0VBQ0U7RUFDQTtBVjhSSjs7QVUzUkU7RUFHRTtBVjRSSjtBVTlRRTtFQUdFO0FWOFFKO0FXOVRBO0VBQ0k7RUFDQSx5QlBPUTtFT05SO0FYZ1VKOztBVzdUQTtFQUNJO0VBQ0EseUJQQ1E7RU9BUjtBWGdVSjs7QVd0VEE7RUFDSTtFQUNBLHlCUFpRO0VPYVI7RUFDQTtBWHlUSjs7QVd0VEE7RUFDSTtFQUNBLHlCUG5CUTtFT29CUjtBWHlUSjtBTXVOSTtFS25oQko7SUFNUTtFWDBUTjtBQUNGOztBV3ZUQTtFQUNJO0VBQ0EseUJQN0JRO0VPOEJSO0FYMFRKOztBV3ZUQTtFQUNJO0VBQ0EseUJQbkNRO0VPb0NSO0VBQ0E7QVgwVEo7O0FXeFRBO0VBQ0k7RUFDQSx5QlB6Q1E7RU8wQ1I7QVgyVEo7O0FXeFRBO0VBQ0k7RUFDQSx5QlAvQ1E7RU9nRFI7QVgyVEo7O0FXeFRBO0VBQ0k7RUFDQSx5QlByRFE7RU9zRFI7QVgyVEo7O0FZMVhBO0VBQ0k7RUFDQTtFQUNBO0VBQ0EseUJSU1U7RVFSVixjUlNVO0VRUlY7QVo2WEo7O0FZMVhBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QVo2WEo7O0FZMVhBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWjZYSjs7QVkxWEE7RUFDSTtFQUNBO0VBQ0E7QVo2WEo7O0FZMVhBO0VBQ0k7RUFDQTtFQUNBO0VBQ0EseUJScEJVO0FKaVpkOztBWXRYQTtFQUVJO0Fad1hKOztBWXJYQTtFQUVJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWnVYSjs7QVlwWEE7RUFDSTtFQUNBO0VBQ0EseUJSN0NVO0VROENWO0VBQ0E7QVp1WEo7O0FZcFhBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQSx5QlIxRFU7RVEyRFY7QVp1WEo7O0FZcFhBO0VBRUk7RUFDQTtFQUNBO0Fac1hKOztBWWxYQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBRUE7QVpvWEo7QVluWEk7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVpxWFI7QVk5V0E7RUFDSTtJQUNJO0VaZ1hOO0VZN1dFO0lBQ0k7RVorV047QUFDRjtBYTFlQTtFQUNJO0VBQ0E7RUFDQTtFQUVBLGNUU1U7RVNSVjtFQUNBO0FiMmVKOztBYXhlQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBYjJlSjs7QWF4ZUE7RUFDSTtFQUNBO0VBQ0E7QWIyZUo7O0FheGVBO0VBRUk7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBYjBlSjtBYXhlSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHlCVDFCTTtFUzJCTjtFQUNBO0VBQ0E7QWIwZVI7QWF0ZVE7RUFDSTtFQUNBO0Fid2VaOztBYWxlQTtFQUNJO0VBQ0E7RUFDQTtFQUNBLHlCVDdDVTtBSmtoQmQ7O0FhbGVBO0VBRUM7QWJvZUQ7O0FhamVBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWJvZUo7QWFqZUk7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHlCVHBFTTtBSnVpQmQ7QWFoZUk7RUFDSTtFQUVBO0FiaWVSO0FhL2RJO0VBQ0k7RUFFQTtBYmdlUjtBYTlkSTtFQUNJO0VBRUE7QWIrZFI7QWE3ZEk7RUFDSTtFQUVBO0FiOGRSO0FhNWRJO0VBQ0k7RUFFQTtBYjZkUjs7QWF6ZEE7RUFDSTtJQUNJO0ViNGROO0VhemRFO0lBQ0k7RWIyZE47RWF4ZEU7SUFDSTtFYjBkTjtFYXZkRTtJQUNJO0VieWROO0VhdGRFO0lBQ0k7RWJ3ZE47RWFyZEU7SUFDSTtFYnVkTjtFYXBkRTtJQUNJO0Vic2ROO0VhbmRFO0lBQ0k7RWJxZE47QUFDRjtBYWxkQTtFQUNJO0VBQ0E7RUFDQTtFQUNBLHlCVHhJVTtFU3lJVjtFQUNBO0VBQ0E7QWJvZEo7O0FhaGRBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBYm1kSjs7QWEvY0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0Fia2RKO0FhaGRJO0VBQ0k7QWJrZFI7QWEvY0k7RUFDSTtBYmlkUjtBYS9jSTtFQUNJO0FiaWRSOztBYTVjQTtFQUVJLGNUakxVO0VTa0xWO0VBQ0E7QWI4Y0o7O0FhMWNBO0VBQ0k7QWI2Y0o7O0FhemNBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWI0Y0o7QU1oSEk7RU9uV0o7SUFTUTtJQUNBO0lBQ0E7RWI4Y047QUFDRjs7QWExY0E7RUFDSTtFQUNBO0VBQ0c7QWI2Y1A7O0FhMWNBO0VBRUksY1RwTlU7RVNxTlY7QWI0Y0o7O0FhemNBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FiNGNKOztBYzNyQkE7RUFFQTtBZDZyQkE7O0FjMXJCQTtFQUNFLGNWUVk7QUpxckJkO0FjNXJCSTtFQUNJO0FkOHJCUjtBTXpKSTtFUXRpQkE7SUFJUTtFZCtyQlY7QUFDRjs7QWN2ckJBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FkMHJCSjs7QWN4ckJBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QWQyckJKOztBY3hyQkE7RUFFSSxjVnZCVTtFVXdCVjtBZDByQko7QWN6ckJFO0VBQ0k7QWQyckJOOztBY3JyQkE7RUFFSTtFQUNBO0VBQ0E7RUFDQTtFQUNBLGNWckNRO0VVc0NSO0FkdXJCSjs7QWNuckJBO0VBQ0k7RUFDQTtFQUNBO0VBRUEsY1ZoRFU7RVVpRFY7QWRxckJKOztBY2xyQkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZHFyQko7O0FjbHJCQTtFQUVJLGNWbkVVO0VVb0VWO0Fkb3JCSjs7QWMvcUJBO0VBQ0k7SUFDSTtFZGtyQk47RWNockJFO0lBQ0k7RWRrckJOO0VjL3FCRTtJQUNJO0VkaXJCTjtBQUNGO0FjOXFCQTtFQUNJO0lBQ0k7RWRnckJOO0VjOXFCRTtJQUNJO0VkZ3JCTjtBQUNGO0FjNXFCQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FkOHFCSjs7QWMzcUJBO0VBRUE7QWQ2cUJBOztBYzFxQkE7RUFFSTtFQUNBO0FkNHFCSjs7QWN6cUJBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZDRxQko7QU0xUUk7RVF2YUo7SUFRUTtFZDZxQk47QUFDRjs7QWMxcUJBO0VBRUk7QWQ0cUJKOztBY3hxQkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWQycUJKO0FNNVJJO0VRclpKO0lBU1E7SUFDQTtJQUNBO0VkNHFCTjtBQUNGOztBY3pxQkE7RUFFSTtFQUNBO0VBQ0E7QWQycUJKO0FjeHFCSTtFQUNJO0VBQ0E7QWQwcUJSOztBY3RxQkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWR5cUJKOztBY3JxQkE7RUFJQTtBZHFxQkE7O0FjbHFCQTtFQUVJO0Fkb3FCSjs7QWMvcEJBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWRrcUJKO0FNeFVJO0VRaldKO0lBVVE7SUFDQTtJQUNBO0VkbXFCTjtBQUNGOztBY2hxQkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FkbXFCSjs7QWNocUJBO0VBRUk7QWRrcUJKOztBYy9wQkE7RUFFSTtBZGlxQko7O0FjN3BCQTtFQUVJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBZCtwQko7O0FjNXBCQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FkK3BCSjs7QWNwcEJBO0VBRUk7RUFFQTtFQUNBO0FkcXBCSjs7QWNqcEJBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7QWRtcEJKOztBYzdvQkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBZGdwQko7O0FjN29CQTtFQUNJO0FkZ3BCSjs7QWN6b0JBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWQ0b0JKO0FNcFpJO0VRL1BKO0lBVVE7SUFDQTtJQUNBO0lBQ0E7RWQ2b0JOO0FBQ0Y7O0FjMW9CQTtFQUVJO0VBQ0E7RUFDQTtBZDRvQko7QWN6b0JJO0VBQ0k7RUFDQTtBZDJvQlI7O0Fjdm9CQTtFQUVJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWR5b0JKO0FNOWFJO0VRak9KO0lBVVE7RWR5b0JOO0FBQ0Y7O0FjdG9CQTtFQUVJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QWR3b0JKOztBY3JvQkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0Fkd29CSjs7QWNwb0JBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FkdW9CSjtBY3JvQkk7RUFDSTtBZHVvQlI7O0Fjbm9CQTtFQUNJO0VBQ0E7RUFDQTtFQUNBLHlCVi9XVTtFVWdYVjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsY1Z0WFU7RVV1WFYseUJWM1hRO0VVNFhSO0Fkc29CSjtBY3BvQkk7RUFDSTtFQUNBO0Fkc29CUjtBY3BvQkk7RUFDSTtFQUNBO0Fkc29CUjtBY3BvQlE7RUFDQTtFQUNBO0Fkc29CUjtBY3BvQkk7RUFDSTtFQUNBO0Fkc29CUjs7QWUzaENBO0VBRUE7RUFDQTtBZjZoQ0E7O0FlMWhDQTtFQUNJO0VBQ0E7QWY2aENKOztBZTFoQ0E7RUFFSSxjWENVO0VXQVY7QWY0aENKOztBZXpoQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBZjRoQ0o7O0FlemhDQTtFQUVJLGNYWlU7RVdhVjtFQUNBO0FmMmhDSjs7QWV4aENBO0VBQ0k7RUFDQTtFQUNBO0FmMmhDSjs7QWV4aENBO0VBQ0ksZVh4QlU7RVd5QlY7QWYyaENKOztBZXhoQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EsY1hyQ1U7RVdzQ1Y7QWYyaENKO0FNbGlCSTtFU25nQko7SUFhUTtFZjRoQ047QUFDRjs7QWVyaENBO0VBQ0k7RUFDQTtFQUNBO0Fmd2hDSjs7QWU1Z0NBO0VBQ0k7RUFDQztBZitnQ0w7O0FlNWdDQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHlCWDdFVTtFVzhFVixjWDdFVTtFVytFVjtBZjhnQ0o7QWUzZ0NJO0VBQ0kseUJYbEZJO0VXbUZSLGNYckZVO0FKa21DZDs7QWdCL21DQTtFQUVJO0FoQmluQ0o7O0FnQjdtQ0E7RUFDSTtFQUVBO0VBQ0E7QWhCK21DSjtBTTVrQkk7RVV2aUJKO0lBT1E7RWhCZ25DTjtBQUNGOztBZ0IzbUNBO0VBRUksY1pQVTtBSm9uQ2Q7O0FnQjFtQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQSx5QlpkVTtFWWVWO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBaEI2bUNKOztBZ0JwbUNBO0VBQ0k7QWhCdW1DSjs7QWdCbm1DQTtFQUNJO0FoQnNtQ0o7O0FnQm5tQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0M7RUFDRDtFQUVBO0FoQnFtQ0o7O0FnQmptQ0E7RUFHSSxjWnpEVTtBSjJwQ2Q7O0FnQi9sQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBaEJrbUNKOztBZ0I5bENBO0VBRUksY1p0RVU7QUpzcUNkOztBZ0I1bENBO0VBQ0k7RUFDQTtFQUNBO0FoQitsQ0o7O0FpQnByQ0E7RUFDRTtFQUNBO0FqQnVyQ0Y7O0FpQmxyQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBakJxckNKOztBaUJsckNBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FqQnFyQ0Y7O0FpQmxyQ0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBakJxckNGOztBaUJqckNBO0VBQ0U7RUFDQTtFQUNBO0FqQm9yQ0Y7O0FpQmpyQ0E7RUFDRTtFQUNBO0VBQ0E7QWpCb3JDRjs7QWtCeHVDQTtFQUVJO0FsQjB1Q0o7O0FrQnZ1Q0E7RUFFSTtFQUNBO0VBQ0EsY2RLVTtFY0pWO0FsQnl1Q0o7QU10c0JJO0VZeGlCSjtJQVFRO0lBQ0E7RWxCMHVDTjtBQUNGOztBa0J2dUNBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FsQjB1Q0o7QU1ydEJJO0VZM2hCSjtJQVFRO0lBQ0E7RWxCNHVDTjtBQUNGOztBa0J6dUNBO0VBQ0k7RUFDQTtBbEI0dUNKOztBTWh1Qkk7RVl6Z0JKO0lBR0U7RWxCMnVDQTtBQUNGOztBa0JydUNBO0VBR0k7QWxCc3VDSjs7QWtCbHVDQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FsQnF1Q0o7O0FrQmx1Q0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBbEJxdUNKO0FNM3ZCSTtFWWpmSjtJQVNRO0VsQnV1Q047QUFDRjtBa0JydUNJO0VBQ0k7RUFDQTtBbEJ1dUNSO0FrQnB1Q0k7RUFDSSx5QmQvREk7RWNnRUo7QWxCc3VDUjs7QWtCbHVDQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBbEJxdUNKOztBa0JsdUNBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBbEJxdUNKOztBa0JqdUNBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QWxCb3VDSjtBTWh5Qkk7RVl4Y0o7SUFNUTtFbEJzdUNOO0FBQ0Y7O0FrQjF0Q0E7RUFFSTtBbEI0dENKOztBa0J6dENBO0VBQ0k7RUFDQTtFQUNBO0FsQjR0Q0o7O0FtQnoxQ0E7RUFFSTtBbkIyMUNKOztBbUJ4MUNBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FuQjIxQ0o7O0FtQnYxQ0E7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FuQjAxQ0o7QW1CejFDSTtFQUNJO0VBQ0E7QW5CMjFDUjtBbUJ6MUNJO0VBQ0k7RUFDQTtBbkIyMUNSO0FtQnoxQ0k7RUFDSTtFQUNBO0FuQjIxQ1I7QW1CejFDSTtFQUNJO0VBQ0E7QW5CMjFDUjtBbUJ6MUNJO0VBQ0k7RUFDQTtBbkIyMUNSO0FtQnoxQ0k7RUFDSTtFQUNBO0FuQjIxQ1I7QW1CejFDSTtFQUNJO0VBQ0E7QW5CMjFDUjtBbUJ6MUNJO0VBQ0k7RUFDQTtBbkIyMUNSO0FtQnoxQ0k7RUFDSTtFQUNBO0FuQjIxQ1I7O0FtQjUwQ0E7RUFFSTtFQUNBLGNmakVVO0Vla0VWO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FuQjYwQ0osQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby1odXJzdW4tMi8uL3N0eWxlcy9iYXNlL3Jlc2V0LnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL3V0aWxzL21peGlucy5zY3NzIiwid2VicGFjazovL3BvcnRmb2xpby1odXJzdW4tMi8uL3N0eWxlcy91dGlscy92ZW5kb3JzLnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL2Jhc2UvZm9udHMuc2NzcyIsIndlYnBhY2s6Ly9wb3J0Zm9saW8taHVyc3VuLTIvLi9zdHlsZXMvdXRpbHMvdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL2Jhc2UvYmFzZS5zY3NzIiwid2VicGFjazovL3BvcnRmb2xpby1odXJzdW4tMi8uL25vZGVfbW9kdWxlcy9pbmNsdWRlLW1lZGlhL2Rpc3QvX2luY2x1ZGUtbWVkaWEuc2NzcyIsIndlYnBhY2s6Ly9wb3J0Zm9saW8taHVyc3VuLTIvLi9zdHlsZXMvc2hhcmVkL3RpdGxlLnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL3NoYXJlZC90ZXh0LnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL3NoYXJlZC9wYXJhZ3JhcGguc2NzcyIsIndlYnBhY2s6Ly9wb3J0Zm9saW8taHVyc3VuLTIvLi9zdHlsZXMvc2hhcmVkL2xpbmtzLnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL3NoYXJlZC9tb250LnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL2NvbXBvbmVudHMvcHJlbG9hZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL2xheW91dC9oZWFkZXIuc2NzcyIsIndlYnBhY2s6Ly9wb3J0Zm9saW8taHVyc3VuLTIvLi9zdHlsZXMvcGFnZXMvaG9tZS9ob21lLnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL3BhZ2VzL3dvcmtzL3dvcmtzLnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL3BhZ2VzL3NraWxscy9za2lsbHMuc2NzcyIsIndlYnBhY2s6Ly9wb3J0Zm9saW8taHVyc3VuLTIvLi9zdHlsZXMvcGFnZXMvZ2FsbGVyeS9nYWxsZXJ5LnNjc3MiLCJ3ZWJwYWNrOi8vcG9ydGZvbGlvLWh1cnN1bi0yLy4vc3R5bGVzL3BhZ2VzL3Nwb3RpZnkvc3BvdGlmeS5zY3NzIiwid2VicGFjazovL3BvcnRmb2xpby1odXJzdW4tMi8uL3N0eWxlcy9wYWdlcy9odXJzdW4vaHVyc3VuLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXHJcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcclxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxyXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxyXG5iLCB1LCBpLCBjZW50ZXIsXHJcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXHJcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxyXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcclxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIFxyXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIFxyXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcclxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcclxuXHRtYXJnaW46IDA7XHJcblx0cGFkZGluZzogMDtcclxuXHRib3JkZXI6IDA7XHJcblx0Zm9udC1zaXplOiAxMDAlO1xyXG5cdGZvbnQ6IGluaGVyaXQ7XHJcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cclxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgXHJcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcbn1cclxuYm9keSB7XHJcblx0bGluZS1oZWlnaHQ6IDE7XHJcbn1cclxub2wsIHVsIHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcbmJsb2NrcXVvdGUsIHEge1xyXG5cdHF1b3Rlczogbm9uZTtcclxufVxyXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcclxucTpiZWZvcmUsIHE6YWZ0ZXIge1xyXG5cdGNvbnRlbnQ6ICcnO1xyXG5cdGNvbnRlbnQ6IG5vbmU7XHJcbn1cclxudGFibGUge1xyXG5cdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcblx0Ym9yZGVyLXNwYWNpbmc6IDA7XHJcbn0iLCJodG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udDogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxub2wsIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYmxvY2txdW90ZSwgcSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSwgcTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbi5odXJzdW5fX3dyYXBwZXIsIC5odXJzdW4sIC5zcG90aWZ5X193cmFwcGVyLCAuc3BvdGlmeSwgLnNraWxsc19fd3JhcHBlciwgLnNraWxscywgLndvcmssIC5ob21lLCAuY29udGVudCwgYm9keSwgaHRtbCB7XG4gIGhlaWdodDogMTAwJTtcbiAgbGVmdDogMDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmRnLmFjIHtcbiAgei1pbmRleDogOTk5OTkgIWltcG9ydGFudDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkJlYmFzIE5ldWVcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9CZWJhc05ldWUtUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvQmViYXNOZXVlLVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJKdWxpdXMgU2FucyBPbmVcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9KdWxpdXNTYW5zT25lLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL0p1bGl1c1NhbnNPbmUtUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdGhpbmcgWW91IENvdWxkIERvXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvTm90aGluZ1lvdUNvdWxkRG8ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL05vdGhpbmdZb3VDb3VsZERvLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL01vbnRzZXJyYXQtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvTW9udHNlcnJhdC1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LVNlbWlCb2xkSXRhbGljLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LVNlbWlCb2xkSXRhbGljLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL01vbnRzZXJyYXQtTWVkaXVtLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LU1lZGl1bS53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Nb250c2VycmF0LVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL01vbnRzZXJyYXQtUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHVzZXItc2VsZWN0OiBub25lO1xufVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAwLjUyMDgzMzMzMzN2dztcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogMS4zMzMzMzMzMzMzdnc7XG4gIH1cbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XG59XG5cbmJvZHk6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDAuNXJlbTtcbn1cblxuYm9keTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDIwMDFBO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuXG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xufVxuXG4ubG9hZF9fc2NyZWVuIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIHBhZGRpbmctdG9wOiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTAxMDEwO1xuICB3aWR0aDogMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5sb2FkX19zY3JlZW5fX2ltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5sb2FkX19jb250YWluZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDEwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLmNvbnRlbnQge1xuICB6LWluZGV4OiAxO1xuICBwYWRkaW5nLXRvcDogOXJlbTtcbn1cblxuY2FudmFzIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5jdXJzb3Ige1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNEMjAwMUE7XG4gIHdpZHRoOiA1cmVtO1xuICBoZWlnaHQ6IDVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgei1pbmRleDogODtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmN1cnNvciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uY3Vyc29yLmFjdGl2ZSB7XG4gIHdpZHRoOiAxNXJlbTtcbiAgaGVpZ2h0OiAxNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJhY2tkcm9wLWZpbHRlcjogaW52ZXJ0KDEpIGdyYXlzY2FsZSgxKTtcbn1cblxuW2RhdGEtYW5pbWF0aW9uPXRpdGxlXSBzcGFuLFxuW2RhdGEtYW5pbWF0aW9uPXBhcmFncmFwaF0gc3BhbixcbltkYXRhLWFuaW1hdGlvbj1sYWJlbF0gc3BhbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLndvcmtzX19jb250ZW50X19idG4sIC53b3Jrc19fY29udGVudF9fY29udGVudCwgLmhlYWRlcl9faGVhZGVyX19pdGVtLCAucHJlbG9hZGVyX19oZWFkZXJfX2xvY2F0aW9uIHtcbiAgZm9udC1zaXplOiAzLjJyZW07XG4gIGZvbnQtZmFtaWx5OiBcIkJlYmFzIE5ldWVcIjtcbn1cblxuLnByZWxvYWRlcl9fdGl0bGUge1xuICBmb250LXNpemU6IDRyZW07XG4gIGZvbnQtZmFtaWx5OiBcIkJlYmFzIE5ldWVcIjtcbn1cblxuLmh1cnN1bl9fZGV0YWlsX190aXRsZSwgLnNraWxsc19fcG9pbnRfX3RpdGxlLCAuaG9tZV9faW50ZXJlc3RpbmdfX3BhcmEsIC5ob21lX19pbnRyb19fc3BhbiwgLnByZWxvYWRlcl9fYnRuIHAge1xuICBmb250LXNpemU6IDYuNHJlbTtcbiAgZm9udC1mYW1pbHk6IFwiQmViYXMgTmV1ZVwiO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5odXJzdW5fX2RldGFpbF9fdGl0bGUsIC5za2lsbHNfX3BvaW50X190aXRsZSwgLmhvbWVfX2ludGVyZXN0aW5nX19wYXJhLCAuaG9tZV9faW50cm9fX3NwYW4sIC5wcmVsb2FkZXJfX2J0biBwIHtcbiAgICBmb250LXNpemU6IDUuNHJlbTtcbiAgfVxufVxuXG4ud29ya3NfX2NvbnRhaW5lcl9fdGl0bGUsIC53b3JrX190aXRsZSwgLnByZWxvYWRlcl9faGVhZGVyX19uYW1lIHtcbiAgZm9udC1zaXplOiA5LjZyZW07XG4gIGZvbnQtZmFtaWx5OiBcIkJlYmFzIE5ldWVcIjtcbn1cblxuLmhvbWVfX2ludHJvX19ncmVldGluZywgLmhvbWVfX2hlcm9fX3RpdGxlLCAuaGVhZGVyX19tZW51X19pdGVtLCAucHJlbG9hZGVyX19sb2FkaW5nX19wZXJjZW50YWdlIHtcbiAgZm9udC1zaXplOiAxMi44cmVtO1xuICBmb250LWZhbWlseTogXCJCZWJhcyBOZXVlXCI7XG59XG5cbi5za2lsbHNfX3RpdGxlLCAuaG9tZV9fY29udGFjdF9fZW1haWwge1xuICBmb250LXNpemU6IDIwcmVtO1xuICBmb250LWZhbWlseTogXCJCZWJhcyBOZXVlXCI7XG59XG5cbi5ob21lX19oZXJvX190ZXh0IHtcbiAgZm9udC1mYW1pbHk6IFwiTm90aGluZyBZb3UgQ291bGQgRG9cIjtcbiAgZm9udC1zaXplOiAxNXJlbTtcbn1cblxuLnNraWxsc19fc2tpbGxfX25hbWUsIC5oZWFkZXJfX3RpbWUge1xuICBmb250LWZhbWlseTogXCJKdWxpdXMgU2FucyBPbmVcIjtcbiAgZm9udC1zaXplOiAyLjJyZW07XG59XG5cbi5za2lsbHNfX3BvaW50X19udW1iZXIsIC5ob21lX19jb250YWN0X19tc2csIC5hYm91dF9fc29jaWFsX19pdGVtIHtcbiAgZm9udC1mYW1pbHk6IFwiSnVsaXVzIFNhbnMgT25lXCI7XG4gIGZvbnQtc2l6ZTogMy4ycmVtO1xufVxuXG4uaGVhZGVyX19tZW51X19zdHVmZnMge1xuICBmb250LWZhbWlseTogXCJKdWxpdXMgU2FucyBPbmVcIjtcbiAgZm9udC1zaXplOiA2LjRyZW07XG59XG5cbi5ob21lX19jb250YWN0X19lbWFpbCwgLmFib3V0X19zb2NpYWxfX2l0ZW0sIC5oZWFkZXJfX21lbnVfX2l0ZW0sIC5zcG90aWZ5X19oZXJvX19idG4sIC5hYm91dF9fbWFkZV9fbWUsIC5pbnRlcmVzdGluZ19fd29ya3NfX3RpdGxlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cbi5ob21lX19jb250YWN0X19lbWFpbDphZnRlciwgLmFib3V0X19zb2NpYWxfX2l0ZW06YWZ0ZXIsIC5oZWFkZXJfX21lbnVfX2l0ZW06YWZ0ZXIsIC5zcG90aWZ5X19oZXJvX19idG46YWZ0ZXIsIC5hYm91dF9fbWFkZV9fbWU6YWZ0ZXIsIC5pbnRlcmVzdGluZ19fd29ya3NfX3RpdGxlOmFmdGVyIHtcbiAgYmFja2dyb3VuZDogY3VycmVudENvbG9yO1xuICBib3R0b206IDA7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogMXB4O1xuICBsZWZ0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzIGN1YmljLWJlemllcigwLjE5LCAxLCAwLjIyLCAxKTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5ob21lX19jb250YWN0X19lbWFpbDpob3ZlcjphZnRlciwgLmFib3V0X19zb2NpYWxfX2l0ZW06aG92ZXI6YWZ0ZXIsIC5oZWFkZXJfX21lbnVfX2l0ZW06aG92ZXI6YWZ0ZXIsIC5zcG90aWZ5X19oZXJvX19idG46YWZ0ZXIsIC5hYm91dF9fbWFkZV9fbWU6YWZ0ZXIsIC5pbnRlcmVzdGluZ19fd29ya3NfX3RpdGxlOmFmdGVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xufVxuXG4uaG9tZV9fY29udGFjdF9fZW1haWw6YWZ0ZXIsIC5hYm91dF9fc29jaWFsX19pdGVtOmFmdGVyLCAuaGVhZGVyX19tZW51X19pdGVtOmFmdGVyLCAuc3BvdGlmeV9faGVyb19fYnRuOmhvdmVyOmFmdGVyLCAuYWJvdXRfX21hZGVfX21lOmhvdmVyOmFmdGVyLCAuaW50ZXJlc3RpbmdfX3dvcmtzX190aXRsZTpob3ZlcjphZnRlciB7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDApO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG59XG5cbi5zcG90aWZ5X19oZXJvX19idG4sIC5hYm91dF9fbWFkZV9fbWUsIC5pbnRlcmVzdGluZ19fd29ya3NfX3RpdGxlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmhvbWVfX2NvbnRhY3RfX2VtYWlsLCAuYWJvdXRfX3NvY2lhbF9faXRlbSwgLmhlYWRlcl9fbWVudV9faXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5tdXNpY19fdGl0bGVfX25hbWUsIC5zcG90aWZ5X19oZXJvX19idG4ge1xuICBmb250LXNpemU6IDIuNHJlbTtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBmb250LXdlaWdodDogNjAwO1xufVxuXG4ubXVzaWNfX2l0ZW1fX2R1cmF0aW9uLCAubXVzaWNfX3RpdGxlX19hcnRpc3Qge1xuICBmb250LXNpemU6IDEuOHJlbTtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBmb250LXdlaWdodDogNDAwO1xufVxuXG4uaG9tZV9faW50cm9fX2ludHJvZHVjdGlvbiB7XG4gIGZvbnQtc2l6ZTogOS42cmVtO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLnNwb3RpZnlfX2hlcm9fX3RpdGxlLCAuaG9tZV9faG9iYnlfX3RpdGxlLCAuaW50ZXJlc3RpbmdfX3dvcmtzX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogOS42cmVtO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnNwb3RpZnlfX2hlcm9fX3RpdGxlLCAuaG9tZV9faG9iYnlfX3RpdGxlLCAuaW50ZXJlc3RpbmdfX3dvcmtzX190aXRsZSB7XG4gICAgZm9udC1zaXplOiA3LjZyZW07XG4gIH1cbn1cblxuLmhvbWVfX2hlcm9fX3BhcmEge1xuICBmb250LXNpemU6IDMuNnJlbTtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG4uc3BvdGlmeV9faGVyb19fZGVzY3JpcHRpb24sIC5ob21lX19fX3RoYW5rc19fbXNnLCAuaG9tZV9faG9iYnlfX3BhcmEsIC5ob21lX19iYXJfX3RleHQsIC5ob21lX19pbmRleCB7XG4gIGZvbnQtc2l6ZTogMy42cmVtO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiA1cmVtO1xufVxuXG4ud29ya3NfX2NvbnRlbnRfX3RleHQsIC5ob21lX19hYm91dF9fam91cm5leSwgLmludGVyZXN0aW5nX193b3Jrc19fcGFyYSB7XG4gIGZvbnQtc2l6ZTogMi44cmVtO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi53b3Jrc19fY29udGVudF9fZGVzY3JpcHRpb24sIC5ob21lX19tYWRlX19wYXJhIHtcbiAgZm9udC1zaXplOiAzLjJyZW07XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuLmFib3V0X19tYWRlX19tZSwgLmFib3V0X19tYWRlX190aXRsZSwgLmFib3V0X19zb2NpYWxfX3RpdGxlIHtcbiAgZm9udC1zaXplOiA0cmVtO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5wcmVsb2FkZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICB6LWluZGV4OiAxMDA7XG59XG5cbi5wcmVsb2FkZXJfX3dyYXBwZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiA1cmVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5wcmVsb2FkZXJfX2hlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xufVxuXG4ucHJlbG9hZGVyX19oZWFkZXJfX3N1YiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMmVtO1xufVxuXG4ucHJlbG9hZGVyX19oZWFkZXJfX2xpbmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDAuMnJlbTtcbiAgaGVpZ2h0OiAxMHJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbn1cblxuLnByZWxvYWRlcl9faGVhZGVyX19sb2NhdGlvbiB7XG4gIGxldHRlci1zcGFjaW5nOiAxcmVtO1xufVxuXG4ucHJlbG9hZGVyX190aXRsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGxldHRlci1zcGFjaW5nOiAxcmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5wcmVsb2FkZXJfX2hlYWRlcl9fY2lyY2xlIHtcbiAgd2lkdGg6IDVyZW07XG4gIGhlaWdodDogNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLnByZWxvYWRlcl9fbG9hZGluZ19fYmFyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDZyZW07XG4gIGJvdHRvbTogNXJlbTtcbiAgd2lkdGg6IDIuOHJlbTtcbiAgbWF4LWhlaWdodDogOTAlO1xuICBoZWlnaHQ6IDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICB0cmFuc2l0aW9uOiAwLjM1cyBlYXNlO1xufVxuXG4ucHJlbG9hZGVyX19sb2FkaW5nX19wZXJjZW50YWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMTVyZW07XG4gIGJvdHRvbTogNXJlbTtcbn1cblxuLnByZWxvYWRlcl9fYnRuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgd2lkdGg6IDIwcmVtO1xuICBoZWlnaHQ6IDIwcmVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogI0QyMDAxQSAwLjVyZW0gc29saWQ7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB6LWluZGV4OiAxO1xuICBvcGFjaXR5OiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4ucHJlbG9hZGVyX19idG46YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHotaW5kZXg6IDI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTlyZW07XG4gIGhlaWdodDogMTlyZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyLWxlZnQ6ICMwMDAwMDAgMnJlbSBzb2xpZDtcbiAgYW5pbWF0aW9uOiBwcmVsb2FkZXItYnRuLWFuaW1hdGlvbiAycyBpbmZpbml0ZSBmb3J3YXJkcztcbn1cbkBrZXlmcmFtZXMgcHJlbG9hZGVyLWJ0bi1hbmltYXRpb24ge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgfVxufVxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogOHJlbTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHBhZGRpbmc6IDBweCA1cmVtO1xuICB6LWluZGV4OiA1O1xufVxuXG4uaGVhZGVyX193cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZmZmZjtcbn1cblxuLmhlYWRlcl9faGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBnYXA6IDFyZW07XG59XG5cbi5oZWFkZXJfX2hlYWRlcl9faXRlbSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG4uaGVhZGVyX19oZWFkZXJfX2l0ZW06YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgY2VudGVyO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBjdWJpYy1iZXppZXIoMC4xOSwgMSwgMC4yMiwgMSk7XG59XG4uaGVhZGVyX19oZWFkZXJfX2l0ZW06aG92ZXI6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX2hlYWRlcl9fbGluZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMC4ycmVtO1xuICBoZWlnaHQ6IDVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG5cbi5oZWFkZXJfX3RpbWUge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uYXVkaW9fX3BsYXkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICB3aWR0aDogNXJlbTtcbiAgaGVpZ2h0OiA1cmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uYXVkaW9fX3BsYXlfX3NwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDAuM3JlbTtcbiAgbWF4LWhlaWdodDogMnJlbTtcbiAgaGVpZ2h0OiAyNSU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG4uYXVkaW9fX3BsYXlfX3NwYW4uYWN0aXZlOm50aC1vZi10eXBlKDEpIHtcbiAgaGVpZ2h0OiAyNSU7XG4gIGFuaW1hdGlvbjogbXVzaWNBbmltYXRpb24gaW5maW5pdGUgMnMgbGluZWFyO1xufVxuLmF1ZGlvX19wbGF5X19zcGFuLmFjdGl2ZTpudGgtb2YtdHlwZSgyKSB7XG4gIGhlaWdodDogMjUlO1xuICBhbmltYXRpb246IG11c2ljQW5pbWF0aW9uIGluZmluaXRlIDJzIGxpbmVhciAycztcbn1cbi5hdWRpb19fcGxheV9fc3Bhbi5hY3RpdmU6bnRoLW9mLXR5cGUoMykge1xuICBoZWlnaHQ6IDI1JTtcbiAgYW5pbWF0aW9uOiBtdXNpY0FuaW1hdGlvbiBpbmZpbml0ZSAycyBsaW5lYXIgNnM7XG59XG4uYXVkaW9fX3BsYXlfX3NwYW4uYWN0aXZlOm50aC1vZi10eXBlKDQpIHtcbiAgaGVpZ2h0OiAyNSU7XG4gIGFuaW1hdGlvbjogbXVzaWNBbmltYXRpb24gaW5maW5pdGUgMnMgbGluZWFyIDdzO1xufVxuLmF1ZGlvX19wbGF5X19zcGFuLmFjdGl2ZTpudGgtb2YtdHlwZSg1KSB7XG4gIGhlaWdodDogMjUlO1xuICBhbmltYXRpb246IG11c2ljQW5pbWF0aW9uIGluZmluaXRlIDJzIGxpbmVhciA0cztcbn1cblxuQGtleWZyYW1lcyBtdXNpY0FuaW1hdGlvbiB7XG4gIDAlIHtcbiAgICBoZWlnaHQ6IDA7XG4gIH1cbiAgMTUlIHtcbiAgICBoZWlnaHQ6IDI1JTtcbiAgfVxuICAzMCUge1xuICAgIGhlaWdodDogNTAlO1xuICB9XG4gIDQ1JSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIDYwJSB7XG4gICAgaGVpZ2h0OiA3NSU7XG4gIH1cbiAgNzUlIHtcbiAgICBoZWlnaHQ6IDI1JTtcbiAgfVxuICA5MCUge1xuICAgIGhlaWdodDogNTAlO1xuICB9XG4gIDEwMCUge1xuICAgIGhlaWdodDogMDtcbiAgfVxufVxuLmhlYWRlcl9fbWVudV9fYnV0dG9uIHtcbiAgd2lkdGg6IDVyZW07XG4gIGhlaWdodDogNXJlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmhlYWRlcl9fbWVudSB7XG4gIHdpZHRoOiAycmVtO1xuICBoZWlnaHQ6IDJyZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdHJhbnNpdGlvbjogMC4zcyBlYXNlLW91dDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmhlYWRlcl9fbWVudS5hY3RpdmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIHRyYW5zaXRpb246IDAuM3MgZWFzZS1pbjtcbn1cbi5oZWFkZXJfX21lbnUuYWN0aXZlIC5oZWFkZXJfX21lbnVfX2l0ZW0ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5oZWFkZXJfX21lbnUuYWN0aXZlIC5oZWFkZXJfX21lbnVfX3dyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLmhlYWRlcl9fbWVudS5hY3RpdmUgLmhlYWRlcl9fbWVudV9fc2hhZG93IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5oZWFkZXJfX21lbnVfX2l0ZW0ge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZGlzcGxheTogbm9uZTtcbiAgdHJhbnNpdGlvbjogMC4zcyBlYXNlLWluLW91dDtcbn1cblxuLmhlYWRlcl9fbWVudV9faXRlbTpob3ZlciB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5oZWFkZXJfX21lbnVfX3dyYXBwZXIge1xuICBkaXNwbGF5OiBub25lO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAxMHJlbTtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiA1cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5oZWFkZXJfX21lbnVfX3dyYXBwZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG59XG5cbi5oZWFkZXJfX21lbnVfX2l0ZW1zIHtcbiAgZ2FwOiAxMHJlbTtcbiAgei1pbmRleDogMTtcbiAgZmxleDogMTtcbn1cblxuLmhlYWRlcl9fbWVudV9fc3R1ZmZzIHtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5oZWFkZXJfX21lbnVfX3NoYWRvdyB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IC0xMHJlbTtcbiAgdG9wOiAtMTByZW07XG4gIHdpZHRoOiA1MHJlbTtcbiAgaGVpZ2h0OiA1MHJlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gIGJveC1zaGFkb3c6IDFyZW0gMXJlbSA1MDAwcmVtIDMwcmVtIHJlZDtcbn1cblxuLmhvbWUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaG9tZV9fd3JhcHBlciB7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLmhvbWVfX3dyYXBwZXIgc2VjdGlvbiB7XG4gIHBhZGRpbmc6IDEwcmVtIDE2cmVtIDVyZW0gMTZyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmhvbWVfX3dyYXBwZXIgc2VjdGlvbiB7XG4gICAgcGFkZGluZzogMTByZW0gNXJlbSA1cmVtIDVyZW07XG4gIH1cbn1cblxuLmhvbWVfX2hlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5ob21lX19oZXJvX193cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmhvbWVfX2hlcm9fX3RpdGxlIHtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uaG9tZV9faGVyb19fdGl0bGU6bnRoLW9mLXR5cGUoMSkge1xuICBhbmltYXRpb246IGhvbWVfX3RpdGxlX19hbmltYWl0aW9uIDhzIGluZmluaXRlIGVhc2U7XG59XG5cbi5ob21lX19oZXJvX190ZXh0IHtcbiAgd2lkdGg6IDMwMHZ3O1xuICB0b3A6IDQwJTtcbiAgbGVmdDogLTIwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29sb3I6ICNEMjAwMUE7XG4gIGFuaW1hdGlvbjogaG9tZV9faGVyb19fdGV4dEFuaW1hdGUgOHMgZWFzZS1pbi1vdXQgaW5maW5pdGUgNXM7XG59XG5cbi5ob21lX19oZXJvX19wYXJhIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAxMCU7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBwYWRkaW5nLWJvdHRvbTogMTByZW07XG59XG5cbi5ob21lX19iYXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogLTEwJTtcbiAgd2lkdGg6IDEwMDAlO1xuICBoZWlnaHQ6IDlyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMXJlbTtcbiAgYm9yZGVyOiAycHggc29saWQgI2ZmZmZmZjtcbn1cblxuLmhvbWVfX2Jhcl9fdGV4dCB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbkBrZXlmcmFtZXMgaG9tZV9fdGl0bGVfX2FuaW1haXRpb24ge1xuICAwJSB7XG4gICAgd2lkdGg6IDAlO1xuICB9XG4gIDUwJSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgMTAwJSB7XG4gICAgd2lkdGg6IDAlO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGhvbWVfX2hlcm9fX3RleHRBbmltYXRlIHtcbiAgZnJvbSB7XG4gICAgbGVmdDogLTMwMCU7XG4gIH1cbiAgdG8ge1xuICAgIGxlZnQ6IDEwMCU7XG4gIH1cbn1cbi5ob21lX19pbnRybyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGdhcDogMnJlbTtcbiAgcGFkZGluZy10b3A6IDEzcmVtO1xuICBib3JkZXItYm90dG9tOiAwLjNyZW0gc29saWQgI2ZmZmZmZjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaG9tZV9faW50cm9fX2dyZWV0aW5nIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmhvbWVfX2ludHJvX19pbnRyb2R1Y3Rpb24ge1xuICB3aWR0aDogODAlO1xuICB6LWluZGV4OiAxO1xufVxuXG4uaG9tZV9faW50cm9fX2ltYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMCU7XG4gIHRvcDogNSU7XG4gIHdpZHRoOiAyMCU7XG4gIG1heC1oZWlnaHQ6IDkwJTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaG9tZV9faW50cm9fX2ltYWdlIHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG59XG5cbi5ob21lX19pbnRyb19fc3BhbiB7XG4gIGJvcmRlci1ib3R0b206IDAuNXJlbSBzb2xpZCAjRDIwMDFBO1xufVxuXG4uaG9tZV9faW50ZXJlc3Rpbmcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTIsIDFmcik7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7XG4gIGJvcmRlci1ib3R0b206IDAuM3JlbSBzb2xpZCAjZmZmZmZmO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5ob21lX19pbnRlcmVzdGluZyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICB9XG59XG5cbi5ob21lX19pbnRlcmVzdGluZ19fcGFyYSB7XG4gIGdyaWQtY29sdW1uLXN0YXJ0OiA0O1xuICBncmlkLWNvbHVtbi1lbmQ6IDEzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmhvbWVfX2ludGVyZXN0aW5nX19wYXJhOm50aC1vZi10eXBlKDIpIHtcbiAgZ3JpZC1yb3ctc3RhcnQ6IDI7XG4gIGdyaWQtcm93LWVuZDogMztcbn1cblxuLmhvbWVfX2ludGVyZXN0aW5nX193b3JrcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdyaWQtY29sdW1uLXN0YXJ0OiA0O1xuICBncmlkLWNvbHVtbi1lbmQ6IDEzO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cblxuLmludGVyZXN0aW5nX193b3Jrc19fdGl0bGUge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5pbnRlcmVzdGluZ19fd29ya3NfX3BhcmEge1xuICB3aWR0aDogNTAlO1xufVxuXG4uaG9tZV9fYWJvdXQge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTIsIDFmcik7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLWJvdHRvbTogMC4zcmVtIHNvbGlkICNmZmZmZmY7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmhvbWVfX2Fib3V0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIH1cbn1cblxuLmhvbWVfX2Fib3V0X19zb2NpYWwge1xuICBncmlkLWNvbHVtbi1zdGFydDogMjtcbiAgZ3JpZC1yb3ctc3RhcnQ6IDI7XG4gIGdhcDogMy4ycmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uYWJvdXRfX3NvY2lhbF9fdGl0bGUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uYWJvdXRfX3NvY2lhbF9faXRlbSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmhvbWVfX2Fib3V0X19qb3VybmV5IHtcbiAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDQ7XG4gIGdyaWQtY29sdW1uLWVuZDogOTtcbiAgZ3JpZC1yb3ctc3RhcnQ6IDI7XG4gIHBhZGRpbmc6IDAuMnJlbTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd29yZC1zcGFjaW5nOiAwLjJyZW07XG59XG5cbi5ob21lX19hYm91dF9fbWFkZSB7XG4gIGdyaWQtY29sdW1uLXN0YXJ0OiAxMDtcbiAgZ3JpZC1jb2x1bW4tZW5kOiAxMztcbiAgZ3JpZC1yb3ctc3RhcnQ6IDI7XG4gIGdhcDogMXJlbTtcbn1cblxuLmFib3V0X19tYWRlX19tZSB7XG4gIGdyaWQtcm93LXN0YXJ0OiAxMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaG9tZV9faG9iYnkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBib3JkZXItYm90dG9tOiAwLjNyZW0gc29saWQgI2ZmZmZmZjtcbn1cblxuLmhvYmJ5X19jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cblxuLmhvbWVfX2hvYmJ5X19wYXJhIHtcbiAgd2lkdGg6IDQwJTtcbn1cblxuLmhvbWVfX2NvbnRhY3Qge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTAsIDFmcik7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDQsIDFmcik7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaG9tZV9fY29udGFjdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB9XG59XG5cbi5ob21lX19jb250YWN0X19tc2cge1xuICBncmlkLWNvbHVtbi1zdGFydDogMjtcbiAgZ3JpZC1jb2x1bW4tZW5kOiA1O1xuICBncmlkLXJvdy1zdGFydDogMTtcbn1cbi5ob21lX19jb250YWN0X19tc2c6bnRoLWxhc3Qtb2YtdHlwZSgyKSB7XG4gIGdyaWQtY29sdW1uLXN0YXJ0OiA3O1xuICBncmlkLWNvbHVtbi1lbmQ6IDEwO1xufVxuXG4uaG9tZV9fY29udGFjdF9fZW1haWwge1xuICBncmlkLWNvbHVtbi1zdGFydDogMTtcbiAgZ3JpZC1jb2x1bW4tZW5kOiAxMDtcbiAgZ3JpZC1yb3ctc3RhcnQ6IDI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaG9tZV9fY29udGFjdF9fZW1haWwge1xuICAgIGZvbnQtc2l6ZTogOHJlbTtcbiAgfVxufVxuXG4uaG9tZV9fX190aGFua3NfX21zZyB7XG4gIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xuICBncmlkLWNvbHVtbi1lbmQ6IDQ7XG4gIGdyaWQtcm93LXN0YXJ0OiAzO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaG9tZV9fdGhhbmtzX19zb2NpYWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBncmlkLXJvdy1zdGFydDogNDtcbiAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XG4gIGdhcDogNXJlbTtcbn1cblxuLmhvbWVfX2VuZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgNHMgZWFzZS1pbjtcbn1cbi5ob21lX19lbmQuYWN0aXZlIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLmhvbWVfX2VuZF9fcG9pbnRzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMnJlbTtcbiAgaGVpZ2h0OiAycmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmb250LXNpemU6IDJyZW07XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5ob21lX19lbmRfX3BvaW50czpmaXJzdC1jaGlsZCB7XG4gIHRvcDogMjAlO1xuICBsZWZ0OiA0OCU7XG59XG4uaG9tZV9fZW5kX19wb2ludHM6bnRoLWNoaWxkKDIpIHtcbiAgdG9wOiA0MCU7XG4gIGxlZnQ6IDYwJTtcbn1cbi5ob21lX19lbmRfX3BvaW50czpudGgtY2hpbGQoMykge1xuICB0b3A6IDcwJTtcbiAgbGVmdDogNDUlO1xufVxuLmhvbWVfX2VuZF9fcG9pbnRzOmxhc3QtY2hpbGQge1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xufVxuXG4ud29yayB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLndvcmtfX3dyYXBwZXIge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAxMHJlbSA1cmVtIDcwcmVtIDVyZW07XG59XG5cbi53b3JrX190aXRsZSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBtYXJnaW4tYm90dG9tOiA1cmVtO1xufVxuXG4ud29ya19fd29ya3NfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbjogNXJlbTtcbiAgYm9yZGVyLWJvdHRvbTogMC40cmVtIHNvbGlkICNmZmZmZmY7XG59XG5cbi53b3Jrc19fY29udGFpbmVyX190aXRsZSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLndvcmtzX19jb250YWluZXJfX2xpbmUge1xuICBoZWlnaHQ6IDJyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLndvcmtzX19jb250YWluZXJfX2xpbmVfX3BhdGgge1xuICBzdHJva2U6ICNmZmZmZmY7XG4gIGZpbGw6IG5vbmU7XG59XG5cbi53b3Jrc19fY29udGFpbmVyX19jb250ZW50IHtcbiAgaGVpZ2h0OiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgd2lkdGg6IDUwJTtcbiAgdHJhbnNpdGlvbjogMnMgZWFzZTtcbiAgb3BhY2l0eTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgcGFkZGluZzogMnJlbTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAud29ya3NfX2NvbnRhaW5lcl9fY29udGVudCB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG4ud29ya3NfX2NvbnRlbnRfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBnYXA6IDJyZW07XG59XG5cbi53b3JrX193b3Jrc19fY29udGFpbmVyOmhvdmVyIC53b3Jrc19fY29udGFpbmVyX19jb250ZW50IHtcbiAgb3BhY2l0eTogMTtcbiAgaGVpZ2h0OiA0MHZoO1xufVxuXG4ud29ya3NfX2NvbnRlbnRfX2J0biB7XG4gIHdpZHRoOiAxMHJlbTtcbiAgaGVpZ2h0OiAxMHJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICB0cmFuc2l0aW9uOiAwLjM1cyBlYXNlLWluLW91dDtcbn1cbi53b3Jrc19fY29udGVudF9fYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0QyMDAxQTtcbiAgY29sb3I6ICMwMDAwMDA7XG59XG5cbi5za2lsbHMge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uc2tpbGxzX193cmFwcGVyIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMTVyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnNraWxsc19fd3JhcHBlciB7XG4gICAgcGFkZGluZzogOHJlbTtcbiAgfVxufVxuXG4uc2tpbGxzX190aXRsZSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4uc2tpbGxzX19wb2ludCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDVyZW07XG4gIGhlaWdodDogNXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiAwLjM1IGVhc2UtaW4tb3V0O1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogMzAlO1xufVxuXG4uc2tpbGxzX19wb2ludDpob3ZlciAuc2tpbGxzX19wb2ludF9fY29udGFpbmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLnNraWxsc19fcG9pbnQudmlzaWJsZSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5za2lsbHNfX3BvaW50X19jb250YWluZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHRyYW5zaXRpb246IDAuMzVzIGVhc2U7XG4gIG9wYWNpdHk6IDA7XG4gIGxlZnQ6IDEwMCU7XG4gIHotaW5kZXg6IDI7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLnNraWxsc19fcG9pbnRfX3RpdGxlIHtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5za2lsbHNfX3BvaW50X19za2lsbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGdhcDogMXJlbTtcbn1cblxuLnNraWxsc19fc2tpbGxfX25hbWUge1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuLnNraWxsc19fc2tpbGxfX2ltYWdlIHtcbiAgd2lkdGg6IDVyZW07XG4gIGhlaWdodDogNXJlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4uZ2FsbGVyeV9fc2Nyb2xsX19pbWFnZXMge1xuICBoZWlnaHQ6IDExMjAwcHg7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5nYWxsZXJ5X19pbWFnZXNfX2ltYWdlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbiNoZWFkbGluZXMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIG1pbi13aWR0aDogNDUwcHg7XG4gIGxlZnQ6IDUwJTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuXG4jZGV0YWlsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjMTExO1xuICB0b3A6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHotaW5kZXg6IDM7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xufVxuXG4jZGV0YWlsSW1nIHtcbiAgd2lkdGg6IDg1JTtcbiAgaGVpZ2h0OiA4NSU7XG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XG59XG5cbiNkZXRhaWxUeHQge1xuICBjb2xvcjogI2NjYztcbiAgZm9udC1zaXplOiAyMHB4O1xuICBsZXR0ZXItc3BhY2luZzogMXB4O1xufVxuXG4uc3BvdGlmeSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5zcG90aWZ5X193cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHBhZGRpbmc6IDEwcmVtIDVyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnNwb3RpZnlfX3dyYXBwZXIge1xuICAgIHBhZGRpbmc6IDVyZW07XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxufVxuXG4uc3BvdGlmeV9faGVybyB7XG4gIGZsZXg6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZ2FwOiA0cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5zcG90aWZ5X19oZXJvIHtcbiAgICBnYXA6IDJyZW07XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuXG4uc3BvdGlmeV9faGVyb19faW1hZ2Uge1xuICB3aWR0aDogNjByZW07XG4gIGhlaWdodDogMzByZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuc3BvdGlmeV9faGVyb19fdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuXG4uc3BvdGlmeV9faGVyb19fYnRuIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uc3BvdGlmeV9fbXVzaWNzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXg6IDI7XG59XG5cbi5zcG90aWZ5X19tdXNpY3NfX3dyYXBwZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTcxNDE0O1xuICB3aWR0aDogNjAlO1xuICBoZWlnaHQ6IDkwJTtcbiAgYm9yZGVyLXJhZGl1czogNXJlbTtcbiAgcGFkZGluZzogMnJlbSAycmVtO1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuc3BvdGlmeV9fbXVzaWNzX193cmFwcGVyIHtcbiAgICB3aWR0aDogODAlO1xuICB9XG59XG4uc3BvdGlmeV9fbXVzaWNzX193cmFwcGVyOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIHdpZHRoOiAwLjNyZW07XG4gIGhlaWdodDogOTAlO1xufVxuLnNwb3RpZnlfX211c2ljc19fd3JhcHBlcjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDIwMDFBO1xuICBib3JkZXItcmFkaXVzOiAxcmVtO1xufVxuXG4uc3BvdGlmeV9fbXVzaWNzX19pdGVtIHtcbiAgaGVpZ2h0OiAxMHJlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1ib3R0b206IDAuMnJlbSBzb2xpZCAjZmZmZmZmO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubXVzaWNfX2l0ZW1fX2ltYWdlIHtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgd2lkdGg6IDZyZW07XG4gIGhlaWdodDogNnJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAycmVtO1xufVxuXG4ubXVzaWNfX2l0ZW1fX3RpdGxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIG1pbi13aWR0aDogMzByZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLm11c2ljX19pdGVtX190aXRsZSB7XG4gICAgbWluLXdpZHRoOiAyNXJlbTtcbiAgfVxufVxuXG4ubXVzaWNfX2l0ZW1fX2R1cmF0aW9uIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMHJlbTtcbn1cblxuLm11c2ljX19pdGVtX19wbGF5IHtcbiAgd2lkdGg6IDVyZW07XG4gIGhlaWdodDogNXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaHVyc3VuX193cmFwcGVyIHtcbiAgcGFkZGluZzogMTByZW0gNXJlbSA1cmVtIDIwcmVtO1xufVxuXG4uaHVyc3VuX19ncmlkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMywgMWZyKTtcbiAgZ2FwOiAxLjVyZW07XG59XG5cbi5ncmlkX19jb250YWluZXJfX2l0ZW0ge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjkpO1xuICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICBib3gtc2hhZG93OiAwIDRweCAzMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDE0cHgpO1xuICAtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjogYmx1cigxNHB4KTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDI1NSwgMjU1LCAyNTUpO1xufVxuLmdyaWRfX2NvbnRhaW5lcl9faXRlbTpudGgtY2hpbGQoMSk6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMik7XG4gIG9wYWNpdHk6IDE7XG59XG4uZ3JpZF9fY29udGFpbmVyX19pdGVtOm50aC1jaGlsZCgyKTpob3ZlciAuaHVyc3VuX19kZXRhaWxfX3RpdGxlIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgb3BhY2l0eTogMTtcbn1cbi5ncmlkX19jb250YWluZXJfX2l0ZW06bnRoLWNoaWxkKDMpOmhvdmVyIC5odXJzdW5fX2RldGFpbF9fdGl0bGUge1xuICB0cmFuc2Zvcm06IHNjYWxlKDIpO1xuICBvcGFjaXR5OiAxO1xufVxuLmdyaWRfX2NvbnRhaW5lcl9faXRlbTpudGgtY2hpbGQoNCk6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMik7XG4gIG9wYWNpdHk6IDE7XG59XG4uZ3JpZF9fY29udGFpbmVyX19pdGVtOm50aC1jaGlsZCg1KTpob3ZlciAuaHVyc3VuX19kZXRhaWxfX3RpdGxlIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgb3BhY2l0eTogMTtcbn1cbi5ncmlkX19jb250YWluZXJfX2l0ZW06bnRoLWNoaWxkKDYpOmhvdmVyIC5odXJzdW5fX2RldGFpbF9fdGl0bGUge1xuICB0cmFuc2Zvcm06IHNjYWxlKDIpO1xuICBvcGFjaXR5OiAxO1xufVxuLmdyaWRfX2NvbnRhaW5lcl9faXRlbTpudGgtY2hpbGQoNyk6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMik7XG4gIG9wYWNpdHk6IDE7XG59XG4uZ3JpZF9fY29udGFpbmVyX19pdGVtOm50aC1jaGlsZCg4KTpob3ZlciAuaHVyc3VuX19kZXRhaWxfX3RpdGxlIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcbiAgb3BhY2l0eTogMTtcbn1cbi5ncmlkX19jb250YWluZXJfX2l0ZW06bnRoLWNoaWxkKDkpOmhvdmVyIC5odXJzdW5fX2RldGFpbF9fdGl0bGUge1xuICB0cmFuc2Zvcm06IHNjYWxlKDIpO1xuICBvcGFjaXR5OiAxO1xufVxuXG4uaHVyc3VuX19kZXRhaWxfX3RpdGxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHotaW5kZXg6IDI7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IDAuMzVzIGVhc2U7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSkgdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufSIsIiVjb3ZlciB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB3aWR0aDogMTAwJVxyXG59XHJcblxyXG4lY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbkBtaXhpbiByYXRpbyAoJGhlaWdodCwgJHdpZHRoKSB7XHJcbiAgICBmb250LXNpemU6IDA7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBwYWRkaW5nLXRvcDogJHdpZHRoIC8gJGhlaWdodCAqIDEwMDtcclxuICAgICAgICB3aWR0aDogMTAwJVxyXG4gICAgfVxyXG59IiwiLmRnLmFjIHtcclxuICAgIHotaW5kZXg6IDk5OTk5ICFpbXBvcnRhbnQ7XHJcbn0iLCJAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1iZWJhcztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9CZWJhc05ldWUtUmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgIHVybCgnLi4vZm9udHMvQmViYXNOZXVlLVJlZ3VsYXIud29mZicpIGZvcm1hdCgnd29mZicpXHJcbiAgICA7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1qdWxpdXM7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvSnVsaXVzU2Fuc09uZS1SZWd1bGFyLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgdXJsKCcuLi9mb250cy9KdWxpdXNTYW5zT25lLVJlZ3VsYXIud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtZGlzcGxheTogc3dhcDtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtbm90aGluZztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9Ob3RoaW5nWW91Q291bGREby53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnRzL05vdGhpbmdZb3VDb3VsZERvLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LW1vbnQ7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvTW9udHNlcnJhdC1Cb2xkLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgIHVybCgnLi4vZm9udHMvTW9udHNlcnJhdC1Cb2xkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1tb250O1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL01vbnRzZXJyYXQtU2VtaUJvbGRJdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9Nb250c2VycmF0LVNlbWlCb2xkSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LW1vbnQ7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvTW9udHNlcnJhdC1NZWRpdW0ud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9Nb250c2VycmF0LU1lZGl1bS53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1tb250O1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL01vbnRzZXJyYXQtUmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnRzL01vbnRzZXJyYXQtUmVndWxhci53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG59XHJcblxyXG4iLCIkei1pbmRleGVzOiAoXHJcbiAgICAncHJlbG9hZGVyJyxcclxuICAgICduYXZpZ2F0aW9uJyxcclxuICAgICdjb250ZW50J1xyXG4pO1xyXG5cclxuJGZvbnQtYmViYXM6ICdCZWJhcyBOZXVlJztcclxuJGZvbnQtanVsaXVzOiAnSnVsaXVzIFNhbnMgT25lJztcclxuJGZvbnQtbm90aGluZzogJ05vdGhpbmcgWW91IENvdWxkIERvJztcclxuJGZvbnQtbW9udDogJ01vbnRzZXJyYXQnO1xyXG5cclxuJGVhc2Utb3V0LWV4cG86IGN1YmljLWJlemllcigwLjE5LDEsMC4yMiwxKTtcclxuXHJcbiRjb2xvci1ibGFjazogIzAwMDAwMDtcclxuJGNvbG9yLXdoaXRlOiAjZmZmZmZmO1xyXG4kY29sb3ItcmVkOiAjRDIwMDFBO1xyXG4iLCIqIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcclxufVxyXG5cclxuXHJcbmh0bWx7XHJcbiAgICBAZXh0ZW5kICVjb3ZlcjtcclxuICAgIGZvbnQtc2l6ZTogY2FsYygxMDB2dy8xOTIwICogMTApO1xyXG4gICAgQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcclxuICAgICAgICBmb250LXNpemU6IGNhbGMoMTAwdncgLyA3NTAgKiAxMCk7XHJcbiAgICB9XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47IFxyXG59XHJcblxyXG5cclxuYm9keSB7XHJcbiAgICBAZXh0ZW5kICVjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1ibGFjaztcclxufVxyXG5cclxuYm9keTo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gICAgd2lkdGg6IDAuNXJlbTtcclxufVxyXG5cclxuYm9keTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXJlZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuXHJcblxyXG5hIHtcclxuICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufSBcclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4ubG9hZF9fc2NyZWVuIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgIHBhZGRpbmctdG9wOiAwO1xyXG4gICAgcGFkZGluZy1yaWdodDogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMDEwMTA7XHJcbiAgICB3aWR0aDogMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG5cclxuLmxvYWRfX3NjcmVlbl9faW1nIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgdG9wOiA1MCU7XHJcbiAgIGxlZnQ6IDUwJTtcclxuICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcclxuICAgd2lkdGg6IDUwJTtcclxufVxyXG5cclxuLmxvYWRfX2NvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHotaW5kZXg6IDEwO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn1cclxuXHJcbi5jb250ZW50IHtcclxuICAgIEBleHRlbmQgJWNvdmVyO1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIHBhZGRpbmctdG9wOiA5cmVtO1xyXG59XHJcblxyXG5jYW52YXMge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbi5jdXJzb3Ige1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXJlZDtcclxuICAgIHdpZHRoOiA1cmVtO1xyXG4gICAgaGVpZ2h0OjVyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB6LWluZGV4OiA4O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgIEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICAgXHJcbn1cclxuXHJcbi5jdXJzb3IuYWN0aXZlIHtcclxuICAgIHdpZHRoOiAxNXJlbTtcclxuICAgIGhlaWdodDogMTVyZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJhY2tkcm9wLWZpbHRlcjogIGludmVydCgxKSBncmF5c2NhbGUoMSk7XHJcbn1cclxuXHJcbltkYXRhLWFuaW1hdGlvbj0ndGl0bGUnXSAsXHJcbltkYXRhLWFuaW1hdGlvbj0ncGFyYWdyYXBoJ10sXHJcbltkYXRhLWFuaW1hdGlvbj0nbGFiZWwnXVxyXG57XHJcbiAgICBzcGFuIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vICAgICBfICAgICAgICAgICAgXyAgICAgICAgICAgXyAgICAgICAgICAgICAgICAgICAgICAgICAgIF8gX1xuLy8gICAgKF8pICAgICAgICAgIHwgfCAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgICB8IChfKVxuLy8gICAgIF8gXyBfXyAgIF9fX3wgfF8gICBfICBfX3wgfCBfX18gICBfIF9fIF9fXyAgIF9fXyAgX198IHxfICBfXyBfXG4vLyAgICB8IHwgJ18gXFwgLyBfX3wgfCB8IHwgfC8gX2AgfC8gXyBcXCB8ICdfIGAgXyBcXCAvIF8gXFwvIF9gIHwgfC8gX2AgfFxuLy8gICAgfCB8IHwgfCB8IChfX3wgfCB8X3wgfCAoX3wgfCAgX18vIHwgfCB8IHwgfCB8ICBfXy8gKF98IHwgfCAoX3wgfFxuLy8gICAgfF98X3wgfF98XFxfX198X3xcXF9fLF98XFxfXyxffFxcX19ffCB8X3wgfF98IHxffFxcX19ffFxcX18sX3xffFxcX18sX3xcbi8vXG4vLyAgICAgIFNpbXBsZSwgZWxlZ2FudCBhbmQgbWFpbnRhaW5hYmxlIG1lZGlhIHF1ZXJpZXMgaW4gU2Fzc1xuLy8gICAgICAgICAgICAgICAgICAgICAgICB2MS40Ljlcbi8vXG4vLyAgICAgICAgaHR0cHM6Ly9lZHVhcmRvYm91Y2FzLmdpdGh1Yi5pby9pbmNsdWRlLW1lZGlhXG4vL1xuLy8gICAgICAgICBBdXRob3JzOiBFZHVhcmRvIEJvdWNhcyAoQGVkdWFyZG9ib3VjYXMpXG4vLyAgICAgICAgICAgICAgICAgIEtpdHR5IEdpcmF1ZGVsIChAa2l0dHlnaXJhdWRlbClcbi8vXG4vLyAgICAgIFRoaXMgcHJvamVjdCBpcyBsaWNlbnNlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIE1JVCBsaWNlbnNlXG4vLy8vXG4vLy8gaW5jbHVkZS1tZWRpYSBsaWJyYXJ5IHB1YmxpYyBjb25maWd1cmF0aW9uXG4vLy8gQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8vXG5cblxuLy8vXG4vLy8gQ3JlYXRlcyBhIGxpc3Qgb2YgZ2xvYmFsIGJyZWFrcG9pbnRzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBicmVha3BvaW50IHdpdGggdGhlIGxhYmVsIGBwaG9uZWBcbi8vLyAgJGJyZWFrcG9pbnRzOiAoJ3Bob25lJzogMzIwcHgpO1xuLy8vXG4kYnJlYWtwb2ludHM6IChcbiAgJ3Bob25lJzogMzIwcHgsXG4gICd0YWJsZXQnOiA3NjhweCxcbiAgJ2Rlc2t0b3AnOiAxMDI0cHhcbikgIWRlZmF1bHQ7XG5cblxuLy8vXG4vLy8gQ3JlYXRlcyBhIGxpc3Qgb2Ygc3RhdGljIGV4cHJlc3Npb25zIG9yIG1lZGlhIHR5cGVzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBtZWRpYSB0eXBlIChzY3JlZW4pXG4vLy8gICRtZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nOiAnc2NyZWVuJyk7XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHN0YXRpYyBleHByZXNzaW9uIHdpdGggbG9naWNhbCBkaXNqdW5jdGlvbiAoT1Igb3BlcmF0b3IpXG4vLy8gICRtZWRpYS1leHByZXNzaW9uczogKFxuLy8vICAgICdyZXRpbmEyeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpJ1xuLy8vICApO1xuLy8vXG4kbWVkaWEtZXhwcmVzc2lvbnM6IChcbiAgJ3NjcmVlbic6ICdzY3JlZW4nLFxuICAncHJpbnQnOiAncHJpbnQnLFxuICAnaGFuZGhlbGQnOiAnaGFuZGhlbGQnLFxuICAnbGFuZHNjYXBlJzogJyhvcmllbnRhdGlvbjogbGFuZHNjYXBlKScsXG4gICdwb3J0cmFpdCc6ICcob3JpZW50YXRpb246IHBvcnRyYWl0KScsXG4gICdyZXRpbmEyeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpLCAobWluLXJlc29sdXRpb246IDJkcHB4KScsXG4gICdyZXRpbmEzeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi1yZXNvbHV0aW9uOiAzNTBkcGkpLCAobWluLXJlc29sdXRpb246IDNkcHB4KSdcbikgIWRlZmF1bHQ7XG5cblxuLy8vXG4vLy8gRGVmaW5lcyBhIG51bWJlciB0byBiZSBhZGRlZCBvciBzdWJ0cmFjdGVkIGZyb20gZWFjaCB1bml0IHdoZW4gZGVjbGFyaW5nIGJyZWFrcG9pbnRzIHdpdGggZXhjbHVzaXZlIGludGVydmFsc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBwaXhlbHMgaXMgZGVmaW5lZCBhcyBgMWAgYnkgZGVmYXVsdFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjEyOHB4Jykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAxMjlweCkge31cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgZW1zIGlzIGRlZmluZWQgYXMgYDAuMDFgIGJ5IGRlZmF1bHRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4yMGVtJykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAyMC4wMWVtKSB7fVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciByZW1zIGlzIGRlZmluZWQgYXMgYDAuMWAgYnkgZGVmYXVsdCwgdG8gYmUgdXNlZCB3aXRoIGBmb250LXNpemU6IDYyLjUlO2Bcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4yLjByZW0nKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDIuMXJlbSkge31cbi8vL1xuJHVuaXQtaW50ZXJ2YWxzOiAoXG4gICdweCc6IDEsXG4gICdlbSc6IDAuMDEsXG4gICdyZW0nOiAwLjEsXG4gICcnOiAwXG4pICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBEZWZpbmVzIHdoZXRoZXIgc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllcyBpcyBhdmFpbGFibGUsIHVzZWZ1bCBmb3IgY3JlYXRpbmcgc2VwYXJhdGUgc3R5bGVzaGVldHNcbi8vLyBmb3IgYnJvd3NlcnMgdGhhdCBkb24ndCBzdXBwb3J0IG1lZGlhIHF1ZXJpZXMuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRGlzYWJsZXMgc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllc1xuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAuZm9vIHtcbi8vLyAgICBjb2xvcjogdG9tYXRvO1xuLy8vICB9XG4vLy9cbiRpbS1tZWRpYS1zdXBwb3J0OiB0cnVlICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBTZWxlY3RzIHdoaWNoIGJyZWFrcG9pbnQgdG8gZW11bGF0ZSB3aGVuIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgaXMgZGlzYWJsZWQuIE1lZGlhIHF1ZXJpZXMgdGhhdCBzdGFydCBhdCBvclxuLy8vIGludGVyY2VwdCB0aGUgYnJlYWtwb2ludCB3aWxsIGJlIGRpc3BsYXllZCwgYW55IG90aGVycyB3aWxsIGJlIGlnbm9yZWQuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAuZm9vIHtcbi8vLyAgICBjb2xvcjogdG9tYXRvO1xuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIE5PVCBzaG93IGJlY2F1c2UgaXQgZG9lcyBub3QgaW50ZXJjZXB0IHRoZSBkZXNrdG9wIGJyZWFrcG9pbnRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ3RhYmxldCc7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PWRlc2t0b3AnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIE5vIG91dHB1dCAqL1xuLy8vXG4kaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBTZWxlY3RzIHdoaWNoIG1lZGlhIGV4cHJlc3Npb25zIGFyZSBhbGxvd2VkIGluIGFuIGV4cHJlc3Npb24gZm9yIGl0IHRvIGJlIHVzZWQgd2hlbiBtZWRpYSBxdWVyaWVzXG4vLy8gYXJlIG5vdCBzdXBwb3J0ZWQuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludCBhbmQgY29udGFpbnMgb25seSBhY2NlcHRlZCBtZWRpYSBleHByZXNzaW9uc1xuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gICRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nKTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0JywgJ3NjcmVlbicpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgIC5mb28ge1xuLy8vICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBOT1Qgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50IGJ1dCBjb250YWlucyBhIG1lZGlhIGV4cHJlc3Npb24gdGhhdCBpcyBub3QgYWNjZXB0ZWRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICAkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJyk7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcsICdyZXRpbmEyeCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogTm8gb3V0cHV0ICovXG4vLy9cbiRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nLCAncG9ydHJhaXQnLCAnbGFuZHNjYXBlJykgIWRlZmF1bHQ7XG5cbi8vLy9cbi8vLyBDcm9zcy1lbmdpbmUgbG9nZ2luZyBlbmdpbmVcbi8vLyBAYXV0aG9yIEtpdHR5IEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gTG9nIGEgbWVzc2FnZSBlaXRoZXIgd2l0aCBgQGVycm9yYCBpZiBzdXBwb3J0ZWRcbi8vLyBlbHNlIHdpdGggYEB3YXJuYCwgdXNpbmcgYGZlYXR1cmUtZXhpc3RzKCdhdC1lcnJvcicpYFxuLy8vIHRvIGRldGVjdCBzdXBwb3J0LlxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRtZXNzYWdlIC0gTWVzc2FnZSB0byBsb2dcbi8vL1xuQGZ1bmN0aW9uIGltLWxvZygkbWVzc2FnZSkge1xuICBAaWYgZmVhdHVyZS1leGlzdHMoJ2F0LWVycm9yJykge1xuICAgIEBlcnJvciAkbWVzc2FnZTtcbiAgfSBAZWxzZSB7XG4gICAgQHdhcm4gJG1lc3NhZ2U7XG4gICAgJF86IG5vb3AoKTtcbiAgfVxuXG4gIEByZXR1cm4gJG1lc3NhZ2U7XG59XG5cblxuLy8vXG4vLy8gV3JhcHBlciBtaXhpbiBmb3IgdGhlIGxvZyBmdW5jdGlvbiBzbyBpdCBjYW4gYmUgdXNlZCB3aXRoIGEgbW9yZSBmcmllbmRseVxuLy8vIEFQSSB0aGFuIGBAaWYgaW0tbG9nKCcuLicpIHt9YCBvciBgJF86IGltLWxvZygnLi4nKWAuIEJhc2ljYWxseSwgdXNlIHRoZSBmdW5jdGlvblxuLy8vIHdpdGhpbiBmdW5jdGlvbnMgYmVjYXVzZSBpdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluIGEgZnVuY3Rpb25cbi8vLyBhbmQgdXNlIHRoZSBtaXhpbiBldmVyeXdoZXJlIGVsc2UgYmVjYXVzZSBpdCdzIG11Y2ggbW9yZSBlbGVnYW50LlxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRtZXNzYWdlIC0gTWVzc2FnZSB0byBsb2dcbi8vL1xuQG1peGluIGxvZygkbWVzc2FnZSkge1xuICBAaWYgaW0tbG9nKCRtZXNzYWdlKSB7fVxufVxuXG5cbi8vL1xuLy8vIEZ1bmN0aW9uIHdpdGggbm8gYEByZXR1cm5gIGNhbGxlZCBuZXh0IHRvIGBAd2FybmAgaW4gU2FzcyAzLjNcbi8vLyB0byB0cmlnZ2VyIGEgY29tcGlsaW5nIGVycm9yIGFuZCBzdG9wIHRoZSBwcm9jZXNzLlxuLy8vXG5AZnVuY3Rpb24gbm9vcCgpIHt9XG5cbi8vL1xuLy8vIERldGVybWluZXMgd2hldGhlciBhIGxpc3Qgb2YgY29uZGl0aW9ucyBpcyBpbnRlcmNlcHRlZCBieSB0aGUgc3RhdGljIGJyZWFrcG9pbnQuXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQHJldHVybiB7Qm9vbGVhbn0gLSBSZXR1cm5zIHRydWUgaWYgdGhlIGNvbmRpdGlvbnMgYXJlIGludGVyY2VwdGVkIGJ5IHRoZSBzdGF0aWMgYnJlYWtwb2ludFxuLy8vXG5AZnVuY3Rpb24gaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikge1xuICAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZTogbWFwLWdldCgkYnJlYWtwb2ludHMsICRpbS1uby1tZWRpYS1icmVha3BvaW50KTtcblxuICBAaWYgbm90ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlIHtcbiAgICBAaWYgaW0tbG9nKCdgI3skaW0tbm8tbWVkaWEtYnJlYWtwb2ludH1gIGlzIG5vdCBhIHZhbGlkIGJyZWFrcG9pbnQuJykge31cbiAgfVxuXG4gIEBlYWNoICRjb25kaXRpb24gaW4gJGNvbmRpdGlvbnMge1xuICAgIEBpZiBub3QgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkY29uZGl0aW9uKSB7XG4gICAgICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRjb25kaXRpb24pO1xuICAgICAgJHByZWZpeDogZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcik7XG4gICAgICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRjb25kaXRpb24sICRvcGVyYXRvcik7XG5cbiAgICAgIEBpZiAoJHByZWZpeCA9PSAnbWF4JyBhbmQgJHZhbHVlIDw9ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlKSBvclxuICAgICAgICAgICgkcHJlZml4ID09ICdtaW4nIGFuZCAkdmFsdWUgPiAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSkge1xuICAgICAgICBAcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgbm90IGluZGV4KCRpbS1uby1tZWRpYS1leHByZXNzaW9ucywgJGNvbmRpdGlvbikge1xuICAgICAgQHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIHRydWU7XG59XG5cbi8vLy9cbi8vLyBQYXJzaW5nIGVuZ2luZVxuLy8vIEBhdXRob3IgS2l0dHkgR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBHZXQgb3BlcmF0b3Igb2YgYW4gZXhwcmVzc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IG9wZXJhdG9yIGZyb21cbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBBbnkgb2YgYD49YCwgYD5gLCBgPD1gLCBgPGAsIGDiiaVgLCBg4omkYFxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGV4cHJlc3Npb24pIHtcbiAgQGVhY2ggJG9wZXJhdG9yIGluICgnPj0nLCAnPicsICc8PScsICc8JywgJ+KJpScsICfiiaQnKSB7XG4gICAgQGlmIHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICAgICBAcmV0dXJuICRvcGVyYXRvcjtcbiAgICB9XG4gIH1cblxuICAvLyBJdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluc2lkZSBhIGZ1bmN0aW9uLCBzbyB3ZSBoYXZlIHRvXG4gIC8vIHJlbHkgb24gdGhlIGBpbS1sb2coLi4pYCBmdW5jdGlvbiByYXRoZXIgdGhhbiB0aGUgYGxvZyguLilgIG1peGluLiBCZWNhdXNlXG4gIC8vIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGFueXdoZXJlIGluIFNhc3MsIHdlIG5lZWQgdG8gaGFjayB0aGUgY2FsbCBpblxuICAvLyBhIGR1bW15IHZhcmlhYmxlLCBzdWNoIGFzIGAkX2AuIElmIGFueWJvZHkgZXZlciByYWlzZSBhIHNjb3BpbmcgaXNzdWUgd2l0aFxuICAvLyBTYXNzIDMuMywgY2hhbmdlIHRoaXMgbGluZSBpbiBgQGlmIGltLWxvZyguLikge31gIGluc3RlYWQuXG4gICRfOiBpbS1sb2coJ05vIG9wZXJhdG9yIGZvdW5kIGluIGAjeyRleHByZXNzaW9ufWAuJyk7XG59XG5cblxuLy8vXG4vLy8gR2V0IGRpbWVuc2lvbiBvZiBhbiBleHByZXNzaW9uLCBiYXNlZCBvbiBhIGZvdW5kIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3QgZGltZW5zaW9uIGZyb21cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3IgZnJvbSBgJGV4cHJlc3Npb25gXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYHdpZHRoYCBvciBgaGVpZ2h0YCAob3IgcG90ZW50aWFsbHkgYW55dGhpbmcgZWxzZSlcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLWRpbWVuc2lvbigkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICRvcGVyYXRvci1pbmRleDogc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcGFyc2VkLWRpbWVuc2lvbjogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAwLCAkb3BlcmF0b3ItaW5kZXggLSAxKTtcbiAgJGRpbWVuc2lvbjogJ3dpZHRoJztcblxuICBAaWYgc3RyLWxlbmd0aCgkcGFyc2VkLWRpbWVuc2lvbikgPiAwIHtcbiAgICAkZGltZW5zaW9uOiAkcGFyc2VkLWRpbWVuc2lvbjtcbiAgfVxuXG4gIEByZXR1cm4gJGRpbWVuc2lvbjtcbn1cblxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIHByZWZpeCBiYXNlZCBvbiBhbiBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYG1pbmAgb3IgYG1heGBcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpIHtcbiAgQHJldHVybiBpZihpbmRleCgoJzwnLCAnPD0nLCAn4omkJyksICRvcGVyYXRvciksICdtYXgnLCAnbWluJyk7XG59XG5cblxuLy8vXG4vLy8gR2V0IHZhbHVlIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCB2YWx1ZSBmcm9tXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yIGZyb20gYCRleHByZXNzaW9uYFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfSAtIEEgbnVtZXJpYyB2YWx1ZVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAkb3BlcmF0b3ItaW5kZXg6IHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sICRvcGVyYXRvci1pbmRleCArIHN0ci1sZW5ndGgoJG9wZXJhdG9yKSk7XG5cbiAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHZhbHVlKSB7XG4gICAgJHZhbHVlOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHZhbHVlKTtcbiAgfSBAZWxzZSB7XG4gICAgJHZhbHVlOiB0by1udW1iZXIoJHZhbHVlKTtcbiAgfVxuXG4gICRpbnRlcnZhbDogbWFwLWdldCgkdW5pdC1pbnRlcnZhbHMsIHVuaXQoJHZhbHVlKSk7XG5cbiAgQGlmIG5vdCAkaW50ZXJ2YWwge1xuICAgIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgICAvLyByZWx5IG9uIHRoZSBgaW0tbG9nKC4uKWAgZnVuY3Rpb24gcmF0aGVyIHRoYW4gdGhlIGBsb2coLi4pYCBtaXhpbi4gQmVjYXVzZVxuICAgIC8vIGZ1bmN0aW9ucyBjYW5ub3QgYmUgY2FsbGVkIGFueXdoZXJlIGluIFNhc3MsIHdlIG5lZWQgdG8gaGFjayB0aGUgY2FsbCBpblxuICAgIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gICAgLy8gU2FzcyAzLjMsIGNoYW5nZSB0aGlzIGxpbmUgaW4gYEBpZiBpbS1sb2coLi4pIHt9YCBpbnN0ZWFkLlxuICAgICRfOiBpbS1sb2coJ1Vua25vd24gdW5pdCBgI3t1bml0KCR2YWx1ZSl9YC4nKTtcbiAgfVxuXG4gIEBpZiAkb3BlcmF0b3IgPT0gJz4nIHtcbiAgICAkdmFsdWU6ICR2YWx1ZSArICRpbnRlcnZhbDtcbiAgfSBAZWxzZSBpZiAkb3BlcmF0b3IgPT0gJzwnIHtcbiAgICAkdmFsdWU6ICR2YWx1ZSAtICRpbnRlcnZhbDtcbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlO1xufVxuXG5cbi8vL1xuLy8vIFBhcnNlIGFuIGV4cHJlc3Npb24gdG8gcmV0dXJuIGEgdmFsaWQgbWVkaWEtcXVlcnkgZXhwcmVzc2lvblxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBwYXJzZVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIFZhbGlkIG1lZGlhIHF1ZXJ5XG4vLy9cbkBmdW5jdGlvbiBwYXJzZS1leHByZXNzaW9uKCRleHByZXNzaW9uKSB7XG4gIC8vIElmIGl0IGlzIHBhcnQgb2YgJG1lZGlhLWV4cHJlc3Npb25zLCBpdCBoYXMgbm8gb3BlcmF0b3JcbiAgLy8gdGhlbiB0aGVyZSBpcyBubyBuZWVkIHRvIGdvIGFueSBmdXJ0aGVyLCBqdXN0IHJldHVybiB0aGUgdmFsdWVcbiAgQGlmIG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pIHtcbiAgICBAcmV0dXJuIG1hcC1nZXQoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbik7XG4gIH1cblxuICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRleHByZXNzaW9uKTtcbiAgJGRpbWVuc2lvbjogZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkcHJlZml4OiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcblxuICBAcmV0dXJuICcoI3skcHJlZml4fS0jeyRkaW1lbnNpb259OiAjeyR2YWx1ZX0pJztcbn1cblxuLy8vXG4vLy8gU2xpY2UgYCRsaXN0YCBiZXR3ZWVuIGAkc3RhcnRgIGFuZCBgJGVuZGAgaW5kZXhlc1xuLy8vXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge0xpc3R9ICRsaXN0IC0gTGlzdCB0byBzbGljZVxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkc3RhcnQgWzFdIC0gU3RhcnQgaW5kZXhcbi8vLyBAcGFyYW0ge051bWJlcn0gJGVuZCBbbGVuZ3RoKCRsaXN0KV0gLSBFbmQgaW5kZXhcbi8vL1xuLy8vIEByZXR1cm4ge0xpc3R9IFNsaWNlZCBsaXN0XG4vLy9cbkBmdW5jdGlvbiBzbGljZSgkbGlzdCwgJHN0YXJ0OiAxLCAkZW5kOiBsZW5ndGgoJGxpc3QpKSB7XG4gIEBpZiBsZW5ndGgoJGxpc3QpIDwgMSBvciAkc3RhcnQgPiAkZW5kIHtcbiAgICBAcmV0dXJuICgpO1xuICB9XG5cbiAgJHJlc3VsdDogKCk7XG5cbiAgQGZvciAkaSBmcm9tICRzdGFydCB0aHJvdWdoICRlbmQge1xuICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCBudGgoJGxpc3QsICRpKSk7XG4gIH1cblxuICBAcmV0dXJuICRyZXN1bHQ7XG59XG5cbi8vLy9cbi8vLyBTdHJpbmcgdG8gbnVtYmVyIGNvbnZlcnRlclxuLy8vIEBhdXRob3IgS2l0dHkgR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuXG4vLy9cbi8vLyBDYXN0cyBhIHN0cmluZyBpbnRvIGEgbnVtYmVyXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZyB8IE51bWJlcn0gJHZhbHVlIC0gVmFsdWUgdG8gYmUgcGFyc2VkXG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9XG4vLy9cbkBmdW5jdGlvbiB0by1udW1iZXIoJHZhbHVlKSB7XG4gIEBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gJ251bWJlcicge1xuICAgIEByZXR1cm4gJHZhbHVlO1xuICB9IEBlbHNlIGlmIHR5cGUtb2YoJHZhbHVlKSAhPSAnc3RyaW5nJyB7XG4gICAgJF86IGltLWxvZygnVmFsdWUgZm9yIGB0by1udW1iZXJgIHNob3VsZCBiZSBhIG51bWJlciBvciBhIHN0cmluZy4nKTtcbiAgfVxuXG4gICRmaXJzdC1jaGFyYWN0ZXI6IHN0ci1zbGljZSgkdmFsdWUsIDEsIDEpO1xuICAkcmVzdWx0OiAwO1xuICAkZGlnaXRzOiAwO1xuICAkbWludXM6ICgkZmlyc3QtY2hhcmFjdGVyID09ICctJyk7XG4gICRudW1iZXJzOiAoJzAnOiAwLCAnMSc6IDEsICcyJzogMiwgJzMnOiAzLCAnNCc6IDQsICc1JzogNSwgJzYnOiA2LCAnNyc6IDcsICc4JzogOCwgJzknOiA5KTtcblxuICAvLyBSZW1vdmUgKy8tIHNpZ24gaWYgcHJlc2VudCBhdCBmaXJzdCBjaGFyYWN0ZXJcbiAgQGlmICgkZmlyc3QtY2hhcmFjdGVyID09ICcrJyBvciAkZmlyc3QtY2hhcmFjdGVyID09ICctJykge1xuICAgICR2YWx1ZTogc3RyLXNsaWNlKCR2YWx1ZSwgMik7XG4gIH1cblxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIHN0ci1sZW5ndGgoJHZhbHVlKSB7XG4gICAgJGNoYXJhY3Rlcjogc3RyLXNsaWNlKCR2YWx1ZSwgJGksICRpKTtcblxuICAgIEBpZiBub3QgKGluZGV4KG1hcC1rZXlzKCRudW1iZXJzKSwgJGNoYXJhY3Rlcikgb3IgJGNoYXJhY3RlciA9PSAnLicpIHtcbiAgICAgIEByZXR1cm4gdG8tbGVuZ3RoKGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpLCBzdHItc2xpY2UoJHZhbHVlLCAkaSkpXG4gICAgfVxuXG4gICAgQGlmICRjaGFyYWN0ZXIgPT0gJy4nIHtcbiAgICAgICRkaWdpdHM6IDE7XG4gICAgfSBAZWxzZSBpZiAkZGlnaXRzID09IDAge1xuICAgICAgJHJlc3VsdDogJHJlc3VsdCAqIDEwICsgbWFwLWdldCgkbnVtYmVycywgJGNoYXJhY3Rlcik7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkZGlnaXRzOiAkZGlnaXRzICogMTA7XG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgbWFwLWdldCgkbnVtYmVycywgJGNoYXJhY3RlcikgLyAkZGlnaXRzO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gaWYoJG1pbnVzLCAtJHJlc3VsdCwgJHJlc3VsdCk7XG59XG5cblxuLy8vXG4vLy8gQWRkIGAkdW5pdGAgdG8gYCR2YWx1ZWBcbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkdmFsdWUgLSBWYWx1ZSB0byBhZGQgdW5pdCB0b1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkdW5pdCAtIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgdW5pdFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfSAtIGAkdmFsdWVgIGV4cHJlc3NlZCBpbiBgJHVuaXRgXG4vLy9cbkBmdW5jdGlvbiB0by1sZW5ndGgoJHZhbHVlLCAkdW5pdCkge1xuICAkdW5pdHM6ICgncHgnOiAxcHgsICdjbSc6IDFjbSwgJ21tJzogMW1tLCAnJSc6IDElLCAnY2gnOiAxY2gsICdwYyc6IDFwYywgJ2luJzogMWluLCAnZW0nOiAxZW0sICdyZW0nOiAxcmVtLCAncHQnOiAxcHQsICdleCc6IDFleCwgJ3Z3JzogMXZ3LCAndmgnOiAxdmgsICd2bWluJzogMXZtaW4sICd2bWF4JzogMXZtYXgpO1xuXG4gIEBpZiBub3QgaW5kZXgobWFwLWtleXMoJHVuaXRzKSwgJHVuaXQpIHtcbiAgICAkXzogaW0tbG9nKCdJbnZhbGlkIHVuaXQgYCN7JHVuaXR9YC4nKTtcbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlICogbWFwLWdldCgkdW5pdHMsICR1bml0KTtcbn1cblxuLy8vXG4vLy8gVGhpcyBtaXhpbiBhaW1zIGF0IHJlZGVmaW5pbmcgdGhlIGNvbmZpZ3VyYXRpb24ganVzdCBmb3IgdGhlIHNjb3BlIG9mXG4vLy8gdGhlIGNhbGwuIEl0IGlzIGhlbHBmdWwgd2hlbiBoYXZpbmcgYSBjb21wb25lbnQgbmVlZGluZyBhbiBleHRlbmRlZFxuLy8vIGNvbmZpZ3VyYXRpb24gc3VjaCBhcyBjdXN0b20gYnJlYWtwb2ludHMgKHJlZmVycmVkIHRvIGFzIHR3ZWFrcG9pbnRzKVxuLy8vIGZvciBpbnN0YW5jZS5cbi8vL1xuLy8vIEBhdXRob3IgS2l0dHkgR2lyYXVkZWxcbi8vL1xuLy8vIEBwYXJhbSB7TWFwfSAkdHdlYWtwb2ludHMgWygpXSAtIE1hcCBvZiB0d2Vha3BvaW50cyB0byBiZSBtZXJnZWQgd2l0aCBgJGJyZWFrcG9pbnRzYFxuLy8vIEBwYXJhbSB7TWFwfSAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnMgWygpXSAtIE1hcCBvZiB0d2Vha2VkIG1lZGlhIGV4cHJlc3Npb25zIHRvIGJlIG1lcmdlZCB3aXRoIGAkbWVkaWEtZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgdGhlIGdsb2JhbCBicmVha3BvaW50cyB3aXRoIGEgdHdlYWtwb2ludFxuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCgnY3VzdG9tJzogNjc4cHgpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJywgJzw9Y3VzdG9tJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCB0aGUgZ2xvYmFsIG1lZGlhIGV4cHJlc3Npb25zIHdpdGggYSBjdXN0b20gb25lXG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zOiAoJ2FsbCc6ICdhbGwnKSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJ2FsbCcsICc+cGhvbmUnKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIGJvdGggY29uZmlndXJhdGlvbiBtYXBzXG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoKCdjdXN0b20nOiA2NzhweCksICgnYWxsJzogJ2FsbCcpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnYWxsJywgJz5waG9uZScsICc8PWN1c3RvbScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuQG1peGluIG1lZGlhLWNvbnRleHQoJHR3ZWFrcG9pbnRzOiAoKSwgJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zOiAoKSkge1xuICAvLyBTYXZlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRnbG9iYWwtYnJlYWtwb2ludHM6ICRicmVha3BvaW50cztcbiAgJGdsb2JhbC1tZWRpYS1leHByZXNzaW9uczogJG1lZGlhLWV4cHJlc3Npb25zO1xuXG4gIC8vIFVwZGF0ZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkYnJlYWtwb2ludHM6IG1hcC1tZXJnZSgkYnJlYWtwb2ludHMsICR0d2Vha3BvaW50cykgIWdsb2JhbDtcbiAgJG1lZGlhLWV4cHJlc3Npb25zOiBtYXAtbWVyZ2UoJG1lZGlhLWV4cHJlc3Npb25zLCAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnMpICFnbG9iYWw7XG5cbiAgQGNvbnRlbnQ7XG5cbiAgLy8gUmVzdG9yZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkYnJlYWtwb2ludHM6ICRnbG9iYWwtYnJlYWtwb2ludHMgIWdsb2JhbDtcbiAgJG1lZGlhLWV4cHJlc3Npb25zOiAkZ2xvYmFsLW1lZGlhLWV4cHJlc3Npb25zICFnbG9iYWw7XG59XG5cbi8vLy9cbi8vLyBpbmNsdWRlLW1lZGlhIHB1YmxpYyBleHBvc2VkIEFQSVxuLy8vIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vL1xuXG5cbi8vL1xuLy8vIEdlbmVyYXRlcyBhIG1lZGlhIHF1ZXJ5IGJhc2VkIG9uIGEgbGlzdCBvZiBjb25kaXRpb25zXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzaW5nbGUgc2V0IGJyZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggdHdvIHNldCBicmVha3BvaW50c1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJywgJzw9dGFibGV0JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PTM1OHB4JywgJzw4NTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggc2V0IGJyZWFrcG9pbnRzIHdpdGggY3VzdG9tIHZhbHVlc1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPmRlc2t0b3AnLCAnPD0xMzUwcHgnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc3RhdGljIGV4cHJlc3Npb25cbi8vLyAgQGluY2x1ZGUgbWVkaWEoJ3JldGluYTJ4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gTWl4aW5nIGV2ZXJ5dGhpbmdcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzUwcHgnLCAnPHRhYmxldCcsICdyZXRpbmEzeCcpIHsgfVxuLy8vXG5AbWl4aW4gbWVkaWEoJGNvbmRpdGlvbnMuLi4pIHtcbiAgQGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGVuZ3RoKCRjb25kaXRpb25zKSA9PSAwKSBvclxuICAgICAgKG5vdCAkaW0tbWVkaWEtc3VwcG9ydCBhbmQgaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikpIHtcbiAgICBAY29udGVudDtcbiAgfSBAZWxzZSBpZiAoJGltLW1lZGlhLXN1cHBvcnQgYW5kIGxlbmd0aCgkY29uZGl0aW9ucykgPiAwKSB7XG4gICAgQG1lZGlhICN7dW5xdW90ZShwYXJzZS1leHByZXNzaW9uKG50aCgkY29uZGl0aW9ucywgMSkpKX0ge1xuICAgICAgLy8gUmVjdXJzaXZlIGNhbGxcbiAgICAgIEBpbmNsdWRlIG1lZGlhKHNsaWNlKCRjb25kaXRpb25zLCAyKS4uLikge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIiV0aXRsZS0zMiB7XHJcbiAgICBmb250LXNpemU6IDMuMnJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1iZWJhcztcclxufVxyXG5cclxuJXRpdGxlLTQwIHtcclxuZm9udC1zaXplOiA0cmVtO1xyXG5mb250LWZhbWlseTogJGZvbnQtYmViYXM7XHJcbn1cclxuXHJcbiV0aXRsZS02NCB7XHJcbiAgICBmb250LXNpemU6IDYuNHJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1iZWJhcztcclxuXHJcbiAgICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNS40cmVtO1xyXG4gICAgfVxyXG4gICAgfVxyXG5cclxuJXRpdGxlLTk2IHtcclxuICAgIGZvbnQtc2l6ZTogOS42cmVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWJlYmFzO1xyXG59XHJcblxyXG4ldGl0bGUtMTI4IHtcclxuICAgIGZvbnQtc2l6ZTogMTIuOHJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1iZWJhcztcclxufVxyXG5cclxuJXRpdGxlLTE1MCB7XHJcbiAgICBmb250LXNpemU6IDE1cmVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWJlYmFzO1xyXG59XHJcblxyXG4ldGl0bGUtMjAwIHtcclxuICAgIGZvbnQtc2l6ZTogMjByZW07XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtYmViYXM7XHJcbn0iLCIldGV4dC0xNTAge1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LW5vdGhpbmc7XHJcbiAgICBmb250LXNpemU6IDE1cmVtO1xyXG59IiwiJXBhcmEtMjIge1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LWp1bGl1cztcclxuICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xyXG59XHJcblxyXG4lcGFyYS0zMiB7XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtanVsaXVzO1xyXG4gICAgZm9udC1zaXplOiAzLjJyZW07XHJcbn1cclxuXHJcbiVwYXJhLTY0IHtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1qdWxpdXM7XHJcbiAgICBmb250LXNpemU6IDYuNHJlbTtcclxufSIsIiVsaW5rX193cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gIH1cclxuICBcclxuICAlbGlua19fbGluZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGhlaWdodDogMXB4O1xyXG4gICAgbGVmdDogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzICRlYXNlLW91dC1leHBvO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gICVsaW5rX19saW5lLS12aXNpYmxlIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpO1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gICVsaW5rX19saW5lLS1oaWRkZW4ge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gICVsaW5rIHtcclxuICAgIEBleHRlbmQgJWxpbmtfX3dyYXBwZXI7XHJcbiAgXHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgXHJcbiAgICAmOmFmdGVyIHtcclxuICAgICAgQGV4dGVuZCAlbGlua19fbGluZTtcclxuICAgICAgQGV4dGVuZCAlbGlua19fbGluZS0tdmlzaWJsZTtcclxuICAgIH1cclxuICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAmOmFmdGVyIHtcclxuICAgICAgICBAZXh0ZW5kICVsaW5rX19saW5lLS1oaWRkZW47XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgJWxpbmstLWhpZGRlbiB7XHJcbiAgICBAZXh0ZW5kICVsaW5rX193cmFwcGVyO1xyXG4gIFxyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIFxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIEBleHRlbmQgJWxpbmtfX2xpbmU7XHJcbiAgICAgIEBleHRlbmQgJWxpbmtfX2xpbmUtLWhpZGRlbjtcclxuICAgIH1cclxuICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAmOmFmdGVyIHtcclxuICAgICAgICBAZXh0ZW5kICVsaW5rX19saW5lLS12aXNpYmxlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSIsIiVtb250LXNlbWlib2xkLTI0IHtcclxuICAgIGZvbnQtc2l6ZTogMi40cmVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LW1vbnQ7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4lbW9udC1yZWd1bGFyLTE4IHtcclxuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LW1vbnQ7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4lbW9udC1zZW1pYm9sZC1pdGFsaWMtNjQge1xyXG4gICAgZm9udC1zaXplOiA2LjRyZW07XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtbW9udDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbiVtb250LXNlbWlib2xkLWl0YWxpYy05NiB7XHJcbiAgICBmb250LXNpemU6IDkuNnJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1tb250O1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5cclxuJW1vbnQtYm9sZC05NiB7XHJcbiAgICBmb250LXNpemU6IDkuNnJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1tb250O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuXHJcbiAgICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNy42cmVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4lbW9udC1tZWRpdW0tMzYge1xyXG4gICAgZm9udC1zaXplOiAzLjZyZW07XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtbW9udDtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbiVtb250LXJlZ3VsYXItMzYge1xyXG4gICAgZm9udC1zaXplOiAzLjZyZW07XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtbW9udDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBsaW5lLWhlaWdodDogNXJlbTtcclxufVxyXG4lbW9udC1yZWd1bGFyLTI4IHtcclxuICAgIGZvbnQtc2l6ZTogMi44cmVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LW1vbnQ7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4lbW9udC1yZWd1bGFyLTMyIHtcclxuICAgIGZvbnQtc2l6ZTogMy4ycmVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250LW1vbnQ7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4lbW9udC1ib2xkLTQwIHtcclxuICAgIGZvbnQtc2l6ZTogNHJlbTtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1tb250O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxufSIsIi5wcmVsb2FkZXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItYmxhY2s7XHJcbiAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG59XHJcblxyXG4ucHJlbG9hZGVyX193cmFwcGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogNXJlbTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLnByZWxvYWRlcl9faGVhZGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxufVxyXG5cclxuLnByZWxvYWRlcl9faGVhZGVyX19zdWIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBnYXA6IDJlbTtcclxufVxyXG5cclxuLnByZWxvYWRlcl9faGVhZGVyX19saW5lIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDAuMnJlbTtcclxuICAgIGhlaWdodDogMTByZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbn1cclxuXHJcbi5wcmVsb2FkZXJfX2hlYWRlcl9fbmFtZSB7XHJcbiAgICBAZXh0ZW5kICV0aXRsZS05NjtcclxufSAgIFxyXG5cclxuLnByZWxvYWRlcl9faGVhZGVyX19sb2NhdGlvbiB7XHJcbiAgICBAZXh0ZW5kICV0aXRsZS0zMjtcclxuICAgIGxldHRlci1zcGFjaW5nOiAxcmVtO1xyXG59XHJcblxyXG4ucHJlbG9hZGVyX190aXRsZSB7XHJcbiAgICBAZXh0ZW5kICV0aXRsZS00MDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcclxuICAgIGxldHRlci1zcGFjaW5nOiAxcmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ucHJlbG9hZGVyX19oZWFkZXJfX2NpcmNsZSB7XHJcbiAgICB3aWR0aDogNXJlbTtcclxuICAgIGhlaWdodDogNXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcblxyXG4ucHJlbG9hZGVyX19sb2FkaW5nX19iYXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogNnJlbTtcclxuICAgIGJvdHRvbTogNXJlbTtcclxuICAgIHdpZHRoOiAyLjhyZW07XHJcbiAgICBtYXgtaGVpZ2h0OiA5MCU7XHJcbiAgICBoZWlnaHQ6IDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgdHJhbnNpdGlvbjogMC4zNXMgZWFzZTtcclxufVxyXG5cclxuLnByZWxvYWRlcl9fbG9hZGluZ19fcGVyY2VudGFnZSB7XHJcbiAgICBAZXh0ZW5kICV0aXRsZS0xMjg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogMTVyZW07XHJcbiAgICBib3R0b206IDVyZW07XHJcblxyXG59XHJcblxyXG4ucHJlbG9hZGVyX19idG4ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xyXG4gICAgd2lkdGg6IDIwcmVtO1xyXG4gICAgaGVpZ2h0OiAyMHJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJvcmRlcjogJGNvbG9yLXJlZCAwLjVyZW0gc29saWQ7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAmOmFmdGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB3aWR0aDogMTlyZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxOXJlbTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7ICAgICAgXHJcbiAgICAgICAgYm9yZGVyLWxlZnQ6ICRjb2xvci1ibGFjayAycmVtIHNvbGlkO1xyXG4gICAgICAgIGFuaW1hdGlvbjogcHJlbG9hZGVyLWJ0bi1hbmltYXRpb24gMnMgaW5maW5pdGUgZm9yd2FyZHM7XHJcbiAgICB9XHJcbiAgICAmIHAge1xyXG4gICAgICBAZXh0ZW5kICV0aXRsZS02NDtcclxuICAgIH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBwcmVsb2FkZXItYnRuLWFuaW1hdGlvbiB7XHJcbiAgICBmcm9tIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKSA7XHJcbiAgICB9XHJcblxyXG4gICAgdG8ge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZykgIDtcclxuICAgIH1cclxufSIsIi5oZWFkZXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDhyZW07XHJcblxyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIHBhZGRpbmc6IDBweCA1cmVtO1xyXG4gICAgei1pbmRleDogNTtcclxufVxyXG5cclxuLmhlYWRlcl9fd3JhcHBlciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvci13aGl0ZTtcclxufVxyXG5cclxuLmhlYWRlcl9faGVhZGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgICBnYXA6MXJlbTtcclxufVxyXG5cclxuLmhlYWRlcl9faGVhZGVyX19pdGVtIHtcclxuICAgIEBleHRlbmQgJXRpdGxlLTMyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcblxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuN3MgJGVhc2Utb3V0LWV4cG87XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGNlbnRlcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG4uaGVhZGVyX19oZWFkZXJfX2xpbmUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMC4ycmVtO1xyXG4gICAgaGVpZ2h0OiA1cmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG59XHJcblxyXG4uaGVhZGVyX190aW1lIHtcclxuIEBleHRlbmQgJXBhcmEtMjI7XHJcbiB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG4uYXVkaW9fX3BsYXkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgIHdpZHRoOiA1cmVtO1xyXG4gICAgaGVpZ2h0OiA1cmVtO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuXHJcbiAgICAmX19zcGFuIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB3aWR0aDogMC4zcmVtO1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDJyZW07XHJcbiAgICAgICAgaGVpZ2h0OiAyNSU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3NwYW4uYWN0aXZlOm50aC1vZi10eXBlKDEpIHtcclxuICAgICAgICBoZWlnaHQ6IDI1JTtcclxuICAgICAgICBcclxuICAgICAgICBhbmltYXRpb246IG11c2ljQW5pbWF0aW9uIGluZmluaXRlIDJzIGxpbmVhciA7XHJcbiAgICB9XHJcbiAgICAmX19zcGFuLmFjdGl2ZTpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgICAgaGVpZ2h0OiAyNSU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYW5pbWF0aW9uOiBtdXNpY0FuaW1hdGlvbiBpbmZpbml0ZSAycyBsaW5lYXIgMnM7XHJcbiAgICB9XHJcbiAgICAmX19zcGFuLmFjdGl2ZTpudGgtb2YtdHlwZSgzKSB7XHJcbiAgICAgICAgaGVpZ2h0OiAyNSU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYW5pbWF0aW9uOiBtdXNpY0FuaW1hdGlvbiBpbmZpbml0ZSAycyBsaW5lYXIgNnM7XHJcbiAgICB9XHJcbiAgICAmX19zcGFuLmFjdGl2ZTpudGgtb2YtdHlwZSg0KSB7XHJcbiAgICAgICAgaGVpZ2h0OiAyNSU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYW5pbWF0aW9uOiBtdXNpY0FuaW1hdGlvbiBpbmZpbml0ZSAycyBsaW5lYXIgN3M7XHJcbiAgICB9XHJcbiAgICAmX19zcGFuLmFjdGl2ZTpudGgtb2YtdHlwZSg1KSB7XHJcbiAgICAgICAgaGVpZ2h0OiAyNSU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYW5pbWF0aW9uOiBtdXNpY0FuaW1hdGlvbiBpbmZpbml0ZSAycyBsaW5lYXIgNHM7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgbXVzaWNBbmltYXRpb24ge1xyXG4gICAgMCUge1xyXG4gICAgICAgIGhlaWdodDogMDtcclxuICAgIH1cclxuXHJcbiAgICAxNSUge1xyXG4gICAgICAgIGhlaWdodDogMjUlO1xyXG4gICAgfVxyXG5cclxuICAgIDMwJSB7XHJcbiAgICAgICAgaGVpZ2h0OiA1MCU7XHJcbiAgICB9XHJcblxyXG4gICAgNDUlIHtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgNjAlIHtcclxuICAgICAgICBoZWlnaHQ6IDc1JTtcclxuICAgIH1cclxuXHJcbiAgICA3NSUge1xyXG4gICAgICAgIGhlaWdodDogMjUlO1xyXG4gICAgfVxyXG5cclxuICAgIDkwJSB7XHJcbiAgICAgICAgaGVpZ2h0OiA1MCU7XHJcbiAgICB9XHJcblxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgaGVpZ2h0OiAwO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaGVhZGVyX19tZW51X19idXR0b24ge1xyXG4gICAgd2lkdGg6IDVyZW07XHJcbiAgICBoZWlnaHQ6IDVyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxufVxyXG5cclxuLmhlYWRlcl9fbWVudSB7XHJcbiAgICB3aWR0aDogMnJlbTtcclxuICAgIGhlaWdodDogMnJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHRyYW5zaXRpb246IDAuM3MgZWFzZS1vdXQ7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG5cclxuLmhlYWRlcl9fbWVudS5hY3RpdmUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgdHJhbnNpdGlvbjogMC4zcyBlYXNlLWluO1xyXG5cclxuICAgIC5oZWFkZXJfX21lbnVfX2l0ZW0ge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG5cclxuICAgIC5oZWFkZXJfX21lbnVfX3dyYXBwZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB9XHJcbiAgICAuaGVhZGVyX19tZW51X19zaGFkb3cge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrXHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4uaGVhZGVyX19tZW51X19pdGVtIHtcclxuICAgIEBleHRlbmQgJXRpdGxlLTEyODtcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgdHJhbnNpdGlvbjogMC4zcyBlYXNlLWluLW91dDtcclxuICAgIEBleHRlbmQgJWxpbmstLWhpZGRlbjtcclxufVxyXG5cclxuLmhlYWRlcl9fbWVudV9faXRlbTpob3ZlciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgXHJcbn1cclxuXHJcbi5oZWFkZXJfX21lbnVfX3dyYXBwZXIge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTByZW07XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGdhcDogNXJlbTtcclxuICAgIEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2U7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIH1cclxuIFxyXG59XHJcblxyXG4uaGVhZGVyX19tZW51X19pdGVtcyB7XHJcbiAgICBnYXA6IDEwcmVtO1xyXG4gICAgei1pbmRleDogMTtcclxuICAgICAgIGZsZXg6IDE7XHJcbn1cclxuXHJcbi5oZWFkZXJfX21lbnVfX3N0dWZmcyB7XHJcbiAgICBAZXh0ZW5kICVwYXJhLTY0O1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIHotaW5kZXg6IDE7XHJcbn1cclxuXHJcbi5oZWFkZXJfX21lbnVfX3NoYWRvdyB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IC0xMHJlbTtcclxuICAgIHRvcDogLTEwcmVtO1xyXG4gICAgd2lkdGg6IDUwcmVtO1xyXG4gICAgaGVpZ2h0OiA1MHJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxuICAgIGJveC1zaGFkb3c6IDFyZW0gMXJlbSA1MDAwcmVtIDMwcmVtIHJlZCA7XHJcbn1cclxuXHJcbiIsIi5ob21lIHtcclxuQGV4dGVuZCVjb3Zlcjtcclxub3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLmhvbWVfX3dyYXBwZXIge1xyXG4gIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICBzZWN0aW9uIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHJlbSAxNnJlbSA1cmVtIDE2cmVtO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxMHJlbSA1cmVtIDVyZW0gNXJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5ob21lX19pbmRleCB7XHJcbiAgICBAZXh0ZW5kICVtb250LXJlZ3VsYXItMzY7XHJcbn1cclxuXHJcbi5ob21lX19oZXJvIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcbi5ob21lX19oZXJvX193cmFwcGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5ob21lX19oZXJvX190aXRsZSB7XHJcbiAgICBAZXh0ZW5kICV0aXRsZS0xMjg7XHJcbiAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAmOm50aC1vZi10eXBlKDEpIHtcclxuICAgICAgYW5pbWF0aW9uOiBob21lX190aXRsZV9fYW5pbWFpdGlvbiA4cyBpbmZpbml0ZSBlYXNlO1xyXG4gIH1cclxuXHJcblxyXG59XHJcblxyXG4uaG9tZV9faGVyb19fdGV4dCB7XHJcbiAgICBAZXh0ZW5kICV0ZXh0LTE1MDtcclxuICAgIHdpZHRoOiAzMDB2dztcclxuICAgIHRvcDogNDAlO1xyXG4gICAgbGVmdDogLTIwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb2xvcjogJGNvbG9yLXJlZDtcclxuICAgIGFuaW1hdGlvbjogaG9tZV9faGVyb19fdGV4dEFuaW1hdGUgOHMgZWFzZS1pbi1vdXQgaW5maW5pdGUgNXM7XHJcblxyXG59XHJcblxyXG4uaG9tZV9faGVyb19fcGFyYSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICByaWdodDogMTAlO1xyXG4gICAgQGV4dGVuZCAlbW9udC1tZWRpdW0tMzY7XHJcbiAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcmVtO1xyXG59XHJcblxyXG4uaG9tZV9fYmFyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IC0xMCU7XHJcbiAgICB3aWR0aDogMTAwMCU7XHJcbiAgICBoZWlnaHQ6IDlyZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBnYXA6IDFyZW07XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAkY29sb3Itd2hpdGU7XHJcbn1cclxuXHJcbi5ob21lX19iYXJfX3RleHQge1xyXG4gICAgQGV4dGVuZCAlbW9udC1yZWd1bGFyLTM2O1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuXHJcblxyXG5Aa2V5ZnJhbWVzIGhvbWVfX3RpdGxlX19hbmltYWl0aW9uIHtcclxuICAgIDAlIHtcclxuICAgICAgICB3aWR0aDogMCU7XHJcbiAgICB9IFxyXG4gICAgNTAlIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAxMDAlIHtcclxuICAgICAgICB3aWR0aDogMCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgaG9tZV9faGVyb19fdGV4dEFuaW1hdGUge1xyXG4gICAgZnJvbSB7XHJcbiAgICAgICAgbGVmdDogLTMwMCU7XHJcbiAgICB9XHJcbiAgICB0byB7XHJcbiAgICAgICAgbGVmdDogMTAwJTtcclxuICAgIH1cclxufVxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vLyBcclxuLmhvbWVfX2ludHJvIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGdhcDogMnJlbTtcclxuICAgIHBhZGRpbmctdG9wOiAxM3JlbTtcclxuICAgIGJvcmRlci1ib3R0b206IDAuM3JlbSBzb2xpZCAkY29sb3Itd2hpdGU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5ob21lX19pbnRyb19fZ3JlZXRpbmcge1xyXG5AZXh0ZW5kICV0aXRsZS0xMjg7XHJcbm92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5ob21lX19pbnRyb19faW50cm9kdWN0aW9uICB7XHJcbiAgICBAZXh0ZW5kICVtb250LXNlbWlib2xkLWl0YWxpYy05NjtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4uaG9tZV9faW50cm9fX2ltYWdle1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDAlO1xyXG4gICAgdG9wOiA1JTtcclxuICAgIHdpZHRoOiAyMCU7XHJcbiAgICBtYXgtaGVpZ2h0OiA5MCU7XHJcblxyXG4gICAgQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcclxuICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaG9tZV9faW50cm9fX3NwYW4ge1xyXG4gICAgQGV4dGVuZCAldGl0bGUtNjQ7XHJcbiAgICBib3JkZXItYm90dG9tOjAuNXJlbSBzb2xpZCAkY29sb3ItcmVkO1xyXG59XHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcblxyXG4uaG9tZV9faW50ZXJlc3Rpbmcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLDFmcik7XHJcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLDFmcik7XHJcbiAgICBib3JkZXItYm90dG9tOiAwLjNyZW0gc29saWQgJGNvbG9yLXdoaXRlO1xyXG5cclxuICAgIEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gICAgfVxyXG59XHJcblxyXG4uaG9tZV9faW50ZXJlc3RpbmdfX3BhcmEge1xyXG4gICAgQGV4dGVuZCAldGl0bGUtNjQ7XHJcbiAgICBncmlkLWNvbHVtbi1zdGFydDogNDtcclxuICAgIGdyaWQtY29sdW1uLWVuZDogMTM7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuXHJcbiAgICAmOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgICBncmlkLXJvdy1zdGFydDogMjtcclxuICAgICAgICBncmlkLXJvdy1lbmQ6IDM7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5ob21lX19pbnRlcmVzdGluZ19fd29ya3Mge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiA0O1xyXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAxMztcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcblxyXG59XHJcblxyXG4uaW50ZXJlc3RpbmdfX3dvcmtzX190aXRsZSB7XHJcbiAgICBAZXh0ZW5kICVsaW5rO1xyXG5AZXh0ZW5kICVtb250LWJvbGQtOTY7XHJcblxyXG5jdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5pbnRlcmVzdGluZ19fd29ya3NfX3BhcmEge1xyXG4gICAgQGV4dGVuZCAlbW9udC1yZWd1bGFyLTI4O1xyXG4gICAgd2lkdGg6IDUwJTtcclxufVxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLy8gXHJcblxyXG4uaG9tZV9fYWJvdXQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLDFmcik7XHJcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCAxZnIpO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMC4zcmVtIHNvbGlkICRjb2xvci13aGl0ZTtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5ob21lX19hYm91dF9fc29jaWFsIHtcclxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAyO1xyXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDI7XHJcbiAgICBnYXA6IDMuMnJlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4uYWJvdXRfX3NvY2lhbF9fdGl0bGUge1xyXG4gICAgQGV4dGVuZCAlbW9udC1ib2xkLTQwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLmFib3V0X19zb2NpYWxfX2l0ZW0gIHtcclxuICAgIEBleHRlbmQgJXBhcmEtMzI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBAZXh0ZW5kICVsaW5rLS1oaWRkZW47XHJcbn1cclxuXHJcbi5ob21lX19hYm91dF9fam91cm5leSB7XHJcbiAgICBAZXh0ZW5kICVtb250LXJlZ3VsYXItMjg7XHJcbiAgICBncmlkLWNvbHVtbi1zdGFydDogNDtcclxuICAgIGdyaWQtY29sdW1uLWVuZDogOTtcclxuICAgIGdyaWQtcm93LXN0YXJ0OjIgO1xyXG4gICAgcGFkZGluZzogMC4ycmVtO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHdvcmQtc3BhY2luZzogMC4ycmVtO1xyXG59XHJcblxyXG4uaG9tZV9fYWJvdXRfX21hZGUgIHtcclxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxMDtcclxuICAgIGdyaWQtY29sdW1uLWVuZDogMTM7XHJcbiAgICBncmlkLXJvdy1zdGFydDoyIDtcclxuICAgIGdhcDogMXJlbTtcclxufVxyXG5cclxuLmFib3V0X19tYWRlX190aXRsZSB7XHJcbiAgICBAZXh0ZW5kICVtb250LWJvbGQtNDA7XHJcbn1cclxuXHJcbi5ob21lX19tYWRlX19wYXJhIHtcclxuICAgIEBleHRlbmQgJW1vbnQtcmVndWxhci0zMjtcclxufVxyXG5cclxuLmFib3V0X19tYWRlX19tZSAge1xyXG4gICAgQGV4dGVuZCAlbW9udC1ib2xkLTQwO1xyXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDEwO1xyXG4gICAgQGV4dGVuZCAlbGluaztcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4uaG9tZV9faG9iYnkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG5cclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGJvcmRlci1ib3R0b206IDAuM3JlbSBzb2xpZCAkY29sb3Itd2hpdGU7XHJcbn1cclxuXHJcbi5ob21lX19ob2JieV9fdGl0bGUge1xyXG4gICAgQGV4dGVuZCAlbW9udC1ib2xkLTk2O1xyXG59XHJcbi5ob2JieV9fY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG59XHJcblxyXG4uaG9tZV9faG9iYnlfX3BhcmEge1xyXG4gICAgd2lkdGg6IDQwJTtcclxuICAgIEBleHRlbmQgJW1vbnQtcmVndWxhci0zNjtcclxufVxyXG5cclxuXHJcbi8vLyAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbi5ob21lX19jb250YWN0IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwxZnIpO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNCwxZnIpO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgIH1cclxufVxyXG5cclxuLmhvbWVfX2NvbnRhY3RfX21zZyB7XHJcbiAgICBAZXh0ZW5kICVwYXJhLTMyO1xyXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDI7XHJcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDU7XHJcbiAgICBncmlkLXJvdy1zdGFydDogMTtcclxuICAgIFxyXG5cclxuICAgICY6bnRoLWxhc3Qtb2YtdHlwZSgyKSB7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW4tc3RhcnQ6NyA7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW4tZW5kOiAxMDtcclxuICAgIH1cclxufVxyXG5cclxuLmhvbWVfX2NvbnRhY3RfX2VtYWlsIHtcclxuICAgIEBleHRlbmQgJXRpdGxlLTIwMDtcclxuICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xyXG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAxMDtcclxuICAgIGdyaWQtcm93LXN0YXJ0OiAyIDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBAZXh0ZW5kICVsaW5rLS1oaWRkZW47XHJcblxyXG4gICAgQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHsgXHJcbiAgICAgICAgZm9udC1zaXplOiA4cmVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaG9tZV9fX190aGFua3NfX21zZyAge1xyXG4gICAgQGV4dGVuZCAlbW9udC1yZWd1bGFyLTM2O1xyXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XHJcbiAgICBncmlkLWNvbHVtbi1lbmQ6IDQ7XHJcbiAgICBncmlkLXJvdy1zdGFydDogMztcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uaG9tZV9fdGhhbmtzX19zb2NpYWwgIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgZ3JpZC1yb3ctc3RhcnQ6IDQ7XHJcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMSA7XHJcbiAgICBnYXA6IDVyZW07XHJcbn1cclxuXHJcblxyXG4uaG9tZV9fZW5kIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSA0cyBlYXNlLWluO1xyXG5cclxuICAgICYuYWN0aXZlIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaG9tZV9fZW5kX19wb2ludHMgIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAycmVtO1xyXG4gICAgaGVpZ2h0OiAycmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIGNvbG9yOiAkY29sb3ItYmxhY2s7XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtbW9udDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICB0b3A6IDIwJTtcclxuICAgICAgICBsZWZ0OiA0OCU7XHJcbiAgICB9XHJcbiAgICAmOm50aC1jaGlsZCgyKSB7XHJcbiAgICAgICAgdG9wOiA0MCU7XHJcbiAgICAgICAgbGVmdDogNjAlO1xyXG4gICAgfVxyXG4gICAgICAgICY6bnRoLWNoaWxkKDMpIHtcclxuICAgICAgICB0b3A6IDcwJTtcclxuICAgICAgICBsZWZ0OiA0NSU7XHJcbiAgICB9XHJcbiAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLy8gJjpudGgtb2YtdHlwZSg1KSB7XHJcbiAgICAvLyAgICAgdG9wOiA1MCU7XHJcbiAgICAvLyAgICAgbGVmdDogNTAlO1xyXG4gICAgLy8gfVxyXG4gICAgLy8gJjpudGgtb2YtdHlwZSg2KSB7XHJcbiAgICAvLyAgICAgdG9wOiA4MCU7XHJcbiAgICAvLyAgICAgcmlnaHQ6IDQ1JTtcclxuICAgIC8vIH1cclxufSIsIi53b3JrIHtcclxuQGV4dGVuZCAlY292ZXI7XHJcbm92ZXJmbG93OiBoaWRkZW47XHJcbmJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC41KTtcclxufVxyXG5cclxuLndvcmtfX3dyYXBwZXIge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHBhZGRpbmc6IDEwcmVtIDVyZW0gNzByZW0gNXJlbTtcclxufVxyXG5cclxuLndvcmtfX3RpdGxlIHtcclxuICAgIEBleHRlbmQgJXRpdGxlLTk2O1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDVyZW07XHJcbn1cclxuXHJcbi53b3JrX193b3Jrc19fY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luOiA1cmVtO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMC40cmVtIHNvbGlkICRjb2xvci13aGl0ZTtcclxufVxyXG5cclxuLndvcmtzX19jb250YWluZXJfX3RpdGxlIHtcclxuICAgIEBleHRlbmQgJXRpdGxlLTk2O1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLndvcmtzX19jb250YWluZXJfX2xpbmUge1xyXG4gICAgaGVpZ2h0OiAycmVtO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLndvcmtzX19jb250YWluZXJfX2xpbmVfX3BhdGgge1xyXG4gICAgc3Ryb2tlOiAkY29sb3Itd2hpdGU7XHJcbiAgICBmaWxsOiBub25lO1xyXG59XHJcblxyXG4ud29ya3NfX2NvbnRhaW5lcl9fY29udGVudCB7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIHRyYW5zaXRpb246IDJzIGVhc2U7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIHBhZGRpbmc6IDJyZW07XHJcblxyXG4gICAgQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcclxuICAgICAgICB3aWR0aDogOTAlXHJcbiAgICB9XHJcbn1cclxuXHJcbi53b3Jrc19fY29udGVudF9fZGVzY3JpcHRpb24ge1xyXG4gICAgQGV4dGVuZCAlbW9udC1yZWd1bGFyLTMyO1xyXG59XHJcblxyXG4ud29ya3NfX2NvbnRlbnRfX2l0ZW0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBnYXA6IDJyZW07XHJcbn1cclxuXHJcbi53b3Jrc19fY29udGVudF9fY29udGVudCB7XHJcbiAgICBAZXh0ZW5kICV0aXRsZS0zMjtcclxufSAgIFxyXG5cclxuLndvcmtzX19jb250ZW50X190ZXh0IHtcclxuICAgIEBleHRlbmQgJW1vbnQtcmVndWxhci0yODtcclxufVxyXG5cclxuXHJcbi53b3JrX193b3Jrc19fY29udGFpbmVyOmhvdmVyIC53b3Jrc19fY29udGFpbmVyX19jb250ZW50IHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgaGVpZ2h0OiA0MHZoXHJcbn1cclxuXHJcbi53b3Jrc19fY29udGVudF9fYnRuIHtcclxuICAgIHdpZHRoOiAxMHJlbTtcclxuICAgIGhlaWdodDogMTByZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1ibGFjaztcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICBAZXh0ZW5kICV0aXRsZS0zMjtcclxuICAgIHRyYW5zaXRpb246IDAuMzVzIGVhc2UtaW4tb3V0O1xyXG5cclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItcmVkO1xyXG4gICAgY29sb3I6ICRjb2xvci1ibGFjaztcclxuICAgIH1cclxufSIsIi5za2lsbHMge1xyXG4gICAgQGV4dGVuZCAlY292ZXI7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxufVxyXG5cclxuLnNraWxsc19fd3JhcHBlciB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgQGV4dGVuZCAlY292ZXI7XHJcbiAgICBwYWRkaW5nOiAxNXJlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcclxuICAgICAgICBwYWRkaW5nOiA4cmVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2tpbGxfX21haW4ge31cclxuXHJcbi5za2lsbHNfX3RpdGxlIHtcclxuICAgIEBleHRlbmQgJXRpdGxlLTIwMDtcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbn1cclxuXHJcbi5za2lsbHNfX3BvaW50IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiA1cmVtO1xyXG4gICAgaGVpZ2h0OiA1cmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjM1IGVhc2UtaW4tb3V0O1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdG9wOiAzMCU7XHJcbn1cclxuXHJcbi5za2lsbHNfX3BvaW50X19udW1iZXIge1xyXG4gICAgQGV4dGVuZCAlcGFyYS0zMjtcclxufVxyXG5cclxuXHJcblxyXG4uc2tpbGxzX19wb2ludDpob3ZlciAuc2tpbGxzX19wb2ludF9fY29udGFpbmVye1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuXHJcbi5za2lsbHNfX3BvaW50LnZpc2libGUge1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG5cclxuLnNraWxsc19fcG9pbnRfX2NvbnRhaW5lciB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgdHJhbnNpdGlvbjogMC4zNXMgZWFzZTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgbGVmdDogMTAwJTsgICBcclxuICAgIHotaW5kZXg6IDI7XHJcblxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xyXG4gXHJcbn1cclxuXHJcbi5za2lsbHNfX3BvaW50X190aXRsZSB7XHJcbiAgICBAZXh0ZW5kICV0aXRsZS02NDtcclxuXHJcbiAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG59XHJcblxyXG4uc2tpbGxzX19wb2ludF9fc2tpbGwge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gICAgZ2FwOiAxcmVtO1xyXG5cclxufVxyXG5cclxuLnNraWxsc19fc2tpbGxfX25hbWUge1xyXG4gICAgQGV4dGVuZCAlcGFyYS0yMjtcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcblxyXG59XHJcblxyXG4uc2tpbGxzX19za2lsbF9faW1hZ2Uge1xyXG4gICAgd2lkdGg6IDVyZW07XHJcbiAgICBoZWlnaHQ6IDVyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbn0iLCIvLyAuZ2FsbGVyeSB7XHJcbi8vICAgQGV4dGVuZCAlY292ZXI7XHJcbi8vICAgaGVpZ2h0OiAxMTAwMHB4O1xyXG4vLyAgIHotaW5kZXg6IDM7XHJcbi8vIH1cclxuXHJcbi5nYWxsZXJ5X19zY3JvbGxfX2ltYWdlcyB7XHJcbiAgaGVpZ2h0OiAxMTIwMHB4O1xyXG4gIG9wYWNpdHk6IDE7XHJcblxyXG59XHJcblxyXG5cclxuLmdhbGxlcnlfX2ltYWdlc19faW1hZ2Uge1xyXG4gICAgZGlzcGxheTpibG9jaztcclxuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4jaGVhZGxpbmVzIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbWF4LXdpZHRoOjgwMHB4O1xyXG4gIG1pbi13aWR0aDo0NTBweDtcclxuICBsZWZ0OjUwJTtcclxuICB0b3A6NTAlO1xyXG4gIHRyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbn1cclxuXHJcbiNkZXRhaWwge1xyXG4gIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gIHdpZHRoOjEwMCU7XHJcbiAgaGVpZ2h0OjEwMCU7XHJcbiAgYmFja2dyb3VuZDojMTExO1xyXG4gIHRvcDoxMDAlO1xyXG4gIGRpc3BsYXk6ZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjpjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6Y2VudGVyO1xyXG4gIHotaW5kZXg6IDM7XHJcbiAganVzdGlmeS1jb250ZW50OnNwYWNlLWV2ZW5seTtcclxuXHJcbn1cclxuXHJcbiNkZXRhaWxJbWcge1xyXG4gIHdpZHRoOjg1JTtcclxuICBoZWlnaHQ6ODUlO1xyXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbn1cclxuXHJcbiNkZXRhaWxUeHQge1xyXG4gIGNvbG9yOiNjY2M7XHJcbiAgZm9udC1zaXplOjIwcHg7XHJcbiAgbGV0dGVyLXNwYWNpbmc6MXB4O1xyXG59IiwiLnNwb3RpZnkge1xyXG4gICAgQGV4dGVuZCAlY292ZXI7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uc3BvdGlmeV9fd3JhcHBlciB7XHJcbiAgICBAZXh0ZW5kICVjb3ZlcjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEwcmVtIDVyZW07XHJcblxyXG4gICAgQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcclxuICAgICAgICBwYWRkaW5nOiA1cmVtO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zcG90aWZ5X19oZXJvIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBnYXA6IDRyZW07XHJcbiAgICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgICAgIGdhcDogMnJlbTtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc3BvdGlmeV9faGVyb19faW1hZ2Uge1xyXG4gICAgd2lkdGg6IDYwcmVtO1xyXG4gICAgaGVpZ2h0OiAzMHJlbTtcclxufVxyXG5cclxuLnNwb3RpZnlfX2hlcm9fX3RpdGxlIHtcclxuQGV4dGVuZCAlbW9udC1ib2xkLTk2O1xyXG5AaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG59XHJcbi5zcG90aWZ5X19oZXJvX19kZXNjcmlwdGlvbiB7XHJcbiBAZXh0ZW5kICVtb250LXJlZ3VsYXItMzY7XHJcbn1cclxuXHJcbi5zcG90aWZ5X19oZXJvX19idG4ge1xyXG4gICAgQGV4dGVuZCAlbW9udC1zZW1pYm9sZC0yNDtcclxuICAgIEBleHRlbmQgJWxpbms7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcblxyXG4uc3BvdGlmeV9fbXVzaWNzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmbGV4OiAyO1xyXG59XHJcblxyXG4uc3BvdGlmeV9fbXVzaWNzX193cmFwcGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxNzE0MTQ7XHJcbiAgICB3aWR0aDogNjAlO1xyXG4gICAgaGVpZ2h0OiA5MCU7XHJcbiAgICBib3JkZXItcmFkaXVzOjVyZW07XHJcbiAgICBwYWRkaW5nOiAycmVtIDJyZW07XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbiAgICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gICAgICAgIHdpZHRoOiAwLjNyZW07XHJcbiAgICAgICAgaGVpZ2h0OiA5MCU7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXJlZDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc3BvdGlmeV9fbXVzaWNzX19pdGVtIHtcclxuICAgIGhlaWdodDogMTByZW07XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlci1ib3R0b206IDAuMnJlbSBzb2xpZCAkY29sb3Itd2hpdGU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5tdXNpY19faXRlbV9faW1hZ2Uge1xyXG4gICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB3aWR0aDogNnJlbTtcclxuICAgIGhlaWdodDogNnJlbTtcclxuICAgIG1hcmdpbi1yaWdodDogMnJlbTtcclxuICBcclxufVxyXG5cclxuLm11c2ljX19pdGVtX190aXRsZSAge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgIG1pbi13aWR0aDogMzByZW07XHJcbiAgICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgICAgIG1pbi13aWR0aDogMjVyZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tdXNpY19fdGl0bGVfX25hbWUge1xyXG4gICAgQGV4dGVuZCAlbW9udC1zZW1pYm9sZC0yNDtcclxuICAgIFxyXG59XHJcblxyXG4ubXVzaWNfX3RpdGxlX19hcnRpc3Qge1xyXG4gICAgQGV4dGVuZCAlbW9udC1yZWd1bGFyLTE4O1xyXG59XHJcblxyXG4ubXVzaWNfX2l0ZW1fX2R1cmF0aW9uIHtcclxuICAgIEBleHRlbmQgJW1vbnQtcmVndWxhci0xODtcclxuICAgIG1hcmdpbi1yaWdodDogMTByZW07XHJcbn1cclxuXHJcbi5tdXNpY19faXRlbV9fcGxheSB7XHJcbiAgICB3aWR0aDogNXJlbTtcclxuICAgIGhlaWdodDogNXJlbTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufSIsIi5odXJzdW4ge1xyXG4gICAgQGV4dGVuZCAlY292ZXI7XHJcbn1cclxuLmh1cnN1bl9fd3JhcHBlciB7XHJcbiAgICBAZXh0ZW5kICVjb3ZlcjtcclxuICAgIHBhZGRpbmc6IDEwcmVtIDVyZW0gNXJlbSAyMHJlbTtcclxufVxyXG5cclxuLmh1cnN1bl9fZ3JpZCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMywgMWZyKTtcclxuICAgIGdhcDogMS41cmVtO1xyXG5cclxufVxyXG5cclxuLmdyaWRfX2NvbnRhaW5lcl9faXRlbSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yOSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggMzBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTRweCk7XHJcbiAgICAtd2Via2l0LWJhY2tkcm9wLWZpbHRlcjogYmx1cigxNHB4KTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7XHJcbiAgICAmOm50aC1jaGlsZCgxKTpob3ZlciAuaHVyc3VuX19kZXRhaWxfX3RpdGxlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDIpO1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbiAgICAmOm50aC1jaGlsZCgyKTpob3ZlciAuaHVyc3VuX19kZXRhaWxfX3RpdGxlICB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoMyk6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoNCk6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoNSk6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoNik6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoNyk6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoOCk6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gICAgJjpudGgtY2hpbGQoOSk6aG92ZXIgLmh1cnN1bl9fZGV0YWlsX190aXRsZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgyKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyAuaHVyc3VuX19kZXRhaWxfX2NvbnRhaW5lciB7XHJcbi8vICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbi8vICAgICB0b3A6NTAlO1xyXG4vLyAgICAgbGVmdDogNSU7XHJcbi8vICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNTAlKTtcclxuLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1ibGFjaztcclxuLy8gICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuLy8gICAgIHdpZHRoOiAzMHJlbTtcclxuLy8gICAgIGhlaWdodDogMzByZW07XHJcbi8vIH1cclxuXHJcbi5odXJzdW5fX2RldGFpbF9fdGl0bGUge1xyXG4gICAgQGV4dGVuZCAldGl0bGUtNjQ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb2xvcjogJGNvbG9yLXdoaXRlOyAgXHJcbiAgICB0b3A6NTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG5cclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgei1pbmRleDogMjtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiAgMC4zNXMgZWFzZTtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSkgdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9*/