/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.spotify__wrapper, .spotify, .skills__wrapper, .skills, .work, .home, .content, body, html {
  height: 100%;
  left: 0;
  object-fit: cover;
  position: absolute;
  top: 0;
  width: 100%;
}

.dg.ac {
  z-index: 99999 !important;
}

@font-face {
  font-family: "Bebas Neue";
  src: url(cf44d2c44a2408c82752.woff2) format("woff2"), url(16888f91cccc75fe2f3c.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Julius Sans One";
  src: url(f68f62ef86f2811bdd9d.woff2) format("woff2"), url(78799505ca742fd672fa.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Nothing You Could Do";
  src: url(9083f5add73d1b557dea.woff2) format("woff2"), url(b627042e5cb21150cd28.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(72b398af40ae6768ab99.woff2) format("woff2"), url(3155f256200b7d559607.woff) format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(827bdec59c41f1f388f4.woff2) format("woff2"), url(3db1a9575b6c29f62162.woff) format("woff");
  font-weight: 600;
  font-style: italic;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(33eb0bfb55ec28115f71.woff2) format("woff2"), url(2451e96bc4c62e5ad1d0.woff) format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url(293820371ca99ec04459.woff2) format("woff2"), url(4a3d63613a362f90a9e6.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  background-color: #000000;
}

body::-webkit-scrollbar {
  width: 0.5rem;
}

body::-webkit-scrollbar-thumb {
  background-color: #D2001A;
  border-radius: 10px;
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
}

button {
  color: inherit;
  background: none;
  cursor: pointer;
  outline: none;
  border: none;
}

.load__screen {
  position: relative;
  padding-left: 0;
  padding-top: 0;
  padding-right: 0;
  background-color: #101010;
  width: 0%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
}

.load__screen__img {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 50%;
}

.load__container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  z-index: 10;
  pointer-events: none;
}

.content {
  z-index: 1;
  padding-top: 9rem;
}

canvas {
  position: fixed;
  left: 0;
  top: 0;
  outline: none;
}

[data-animation=title] span,
[data-animation=paragraph] span,
[data-animation=label] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.works__content__btn, .works__content__content, .header__header__item, .preloader__header__location {
  font-size: 3.2rem;
  font-family: "Bebas Neue";
}

.preloader__title {
  font-size: 4rem;
  font-family: "Bebas Neue";
}

.skills__point__title, .home__interesting__para, .home__intro__span, .preloader__btn p {
  font-size: 6.4rem;
  font-family: "Bebas Neue";
}
@media (max-width: 767px) {
  .skills__point__title, .home__interesting__para, .home__intro__span, .preloader__btn p {
    font-size: 5.4rem;
  }
}

.works__container__title, .work__title, .preloader__header__name {
  font-size: 9.6rem;
  font-family: "Bebas Neue";
}

.home__intro__greeting, .home__hero__title, .header__menu__item, .preloader__loading__percentage {
  font-size: 12.8rem;
  font-family: "Bebas Neue";
}

.skills__title, .home__contact__email {
  font-size: 20rem;
  font-family: "Bebas Neue";
}

.home__hero__text {
  font-family: "Nothing You Could Do";
  font-size: 15rem;
}

.skills__skill__name, .header__time {
  font-family: "Julius Sans One";
  font-size: 2.2rem;
}

.skills__point__number, .home__contact__msg, .about__social__item {
  font-family: "Julius Sans One";
  font-size: 3.2rem;
}

.header__menu__stuffs {
  font-family: "Julius Sans One";
  font-size: 6.4rem;
}

.home__contact__email, .about__social__item, .header__menu__item, .spotify__hero__btn, .about__made__me, .interesting__works__title {
  display: inline-block;
  overflow: hidden;
  position: relative;
  vertical-align: top;
}

.home__contact__email:after, .about__social__item:after, .header__menu__item:after, .spotify__hero__btn:after, .about__made__me:after, .interesting__works__title:after {
  background: currentColor;
  bottom: 0;
  content: "";
  height: 1px;
  left: 0;
  position: absolute;
  transition: transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
  width: 100%;
}

.home__contact__email:hover:after, .about__social__item:hover:after, .header__menu__item:hover:after, .spotify__hero__btn:after, .about__made__me:after, .interesting__works__title:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.home__contact__email:after, .about__social__item:after, .header__menu__item:after, .spotify__hero__btn:hover:after, .about__made__me:hover:after, .interesting__works__title:hover:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.spotify__hero__btn, .about__made__me, .interesting__works__title {
  display: inline-block;
}
.home__contact__email, .about__social__item, .header__menu__item {
  display: inline-block;
}
.music__title__name, .spotify__hero__btn {
  font-size: 2.4rem;
  font-family: "Montserrat";
  font-weight: 600;
}

.music__item__duration, .music__title__artist {
  font-size: 1.8rem;
  font-family: "Montserrat";
  font-weight: 400;
}

.home__intro__introduction {
  font-size: 9.6rem;
  font-family: "Montserrat";
  font-style: italic;
  font-weight: 600;
}

.spotify__hero__title, .home__hobby__title, .interesting__works__title {
  font-size: 9.6rem;
  font-family: "Montserrat";
  font-weight: 700;
}
@media (max-width: 767px) {
  .spotify__hero__title, .home__hobby__title, .interesting__works__title {
    font-size: 7.6rem;
  }
}

.home__hero__para {
  font-size: 3.6rem;
  font-family: "Montserrat";
  font-weight: 500;
}

.spotify__hero__description, .home____thanks__msg, .home__hobby__para, .home__bar__text, .home__index {
  font-size: 3.6rem;
  font-family: "Montserrat";
  font-weight: 400;
  line-height: 5rem;
}

.works__content__text, .home__about__journey, .interesting__works__para {
  font-size: 2.8rem;
  font-family: "Montserrat";
  font-weight: 400;
}

.works__content__description, .home__made__para {
  font-size: 3.2rem;
  font-family: "Montserrat";
  font-weight: 400;
}

.about__made__me, .about__made__title, .about__social__title {
  font-size: 4rem;
  font-family: "Montserrat";
  font-weight: 700;
}

.preloader {
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: #000000;
  color: #ffffff;
  z-index: 100;
}

.preloader__wrapper {
  width: 100%;
  height: 100%;
  padding: 5rem;
  position: relative;
}

.preloader__header {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-start;
}

.preloader__header__sub {
  display: flex;
  align-items: center;
  gap: 2em;
}

.preloader__header__line {
  display: block;
  width: 0.2rem;
  height: 10rem;
  background-color: #ffffff;
}

.preloader__header__location {
  letter-spacing: 1rem;
}

.preloader__title {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  letter-spacing: 1rem;
  text-align: center;
}

.preloader__header__circle {
  width: 5rem;
  height: 5rem;
  background-color: #ffffff;
  display: block;
  border-radius: 50%;
}

.preloader__loading__bar {
  display: block;
  position: absolute;
  right: 6rem;
  bottom: 5rem;
  width: 2.8rem;
  max-height: 90%;
  height: 0%;
  background-color: #ffffff;
  transition: 0.35s ease;
}

.preloader__loading__percentage {
  position: absolute;
  right: 15rem;
  bottom: 5rem;
}

.preloader__btn {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 20rem;
  height: 20rem;
  border-radius: 50%;
  border: #D2001A 0.5rem solid;
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 1;
  opacity: 0;
  cursor: pointer;
}
.preloader__btn:after {
  position: absolute;
  content: "";
  z-index: 2;
  display: block;
  width: 19rem;
  height: 19rem;
  border-radius: 50%;
  border-left: #000000 2rem solid;
  animation: preloader-btn-animation 2s infinite forwards;
}
@keyframes preloader-btn-animation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.header {
  position: fixed;
  width: 100%;
  height: 8rem;
  color: #ffffff;
  padding: 0px 5rem;
  z-index: 5;
}

.header__wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid #ffffff;
}

.header__header {
  display: flex;
  align-items: flex-end;
  gap: 1rem;
}

.header__header__item {
  cursor: pointer;
  position: relative;
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}
.header__header__item:after {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 1px;
  width: 100%;
  content: "";
  background-color: #ffffff;
  transform: scaleX(0);
  transform-origin: right center;
  transition: transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
}
.header__header__item:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.header__header__line {
  display: block;
  width: 0.2rem;
  height: 5rem;
  background-color: #ffffff;
}

.header__time {
  text-transform: uppercase;
}

.audio__play {
  display: flex;
  flex-direction: row;
  align-items: flex-end;
  justify-content: space-evenly;
  width: 5rem;
  height: 5rem;
  cursor: pointer;
}
.audio__play__span {
  display: block;
  width: 0.3rem;
  max-height: 2rem;
  height: 25%;
  background-color: #ffffff;
}
.audio__play__span.active:nth-of-type(1) {
  height: 25%;
  animation: musicAnimation infinite 2s linear;
}
.audio__play__span.active:nth-of-type(2) {
  height: 25%;
  animation: musicAnimation infinite 2s linear 2s;
}
.audio__play__span.active:nth-of-type(3) {
  height: 25%;
  animation: musicAnimation infinite 2s linear 6s;
}
.audio__play__span.active:nth-of-type(4) {
  height: 25%;
  animation: musicAnimation infinite 2s linear 7s;
}
.audio__play__span.active:nth-of-type(5) {
  height: 25%;
  animation: musicAnimation infinite 2s linear 4s;
}

@keyframes musicAnimation {
  0% {
    height: 0;
  }
  15% {
    height: 25%;
  }
  30% {
    height: 50%;
  }
  45% {
    height: 100%;
  }
  60% {
    height: 75%;
  }
  75% {
    height: 25%;
  }
  90% {
    height: 50%;
  }
  100% {
    height: 0;
  }
}
.header__menu__button {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
  background-color: #ffffff;
  display: flex;
  align-items: center;
  justify-content: center;
}

.header__menu {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  transition: 0.3s ease-out;
  overflow: hidden;
}

.header__menu.active {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 0;
  transition: 0.3s ease-in;
}
.header__menu.active .header__menu__item {
  display: block;
}
.header__menu.active .header__menu__wrapper {
  display: flex;
}
.header__menu.active .header__menu__shadow {
  display: block;
}

.header__menu__item {
  color: #ffffff;
  display: none;
  transition: 0.3s ease-in-out;
}

.header__menu__item:hover {
  color: red;
}

.header__menu__wrapper {
  display: none;
  width: 100%;
  height: 100%;
  padding: 10rem;
  flex-direction: row;
  align-items: center;
  gap: 5rem;
}
@media (max-width: 767px) {
  .header__menu__wrapper {
    flex-direction: column-reverse;
    align-items: center;
    justify-content: center;
  }
}

.header__menu__items {
  gap: 10rem;
  z-index: 1;
  flex: 1;
}

.header__menu__stuffs {
  color: #ffffff;
  z-index: 1;
}

.header__menu__shadow {
  display: none;
  position: absolute;
  right: -10rem;
  top: -10rem;
  width: 50rem;
  height: 50rem;
  border-radius: 50%;
  background-color: red;
  box-shadow: 1rem 1rem 5000rem 30rem red;
}

.home {
  overflow: hidden;
}

.home__wrapper {
  color: #ffffff;
}
.home__wrapper section {
  padding: 10rem 16rem 5rem 16rem;
}
@media (max-width: 767px) {
  .home__wrapper section {
    padding: 10rem 5rem 5rem 5rem;
  }
}

.home__hero {
  position: relative;
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.home__hero__wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.home__hero__title {
  color: #ffffff;
  overflow: hidden;
}
.home__hero__title:nth-of-type(1) {
  animation: home__title__animaition 8s infinite ease;
}

.home__hero__text {
  width: 300vw;
  top: 40%;
  left: -200%;
  position: absolute;
  color: #D2001A;
  animation: home__hero__textAnimate 8s ease-in-out infinite 5s;
}

.home__hero__para {
  position: absolute;
  bottom: 0;
  right: 10%;
  color: #ffffff;
  padding-bottom: 10rem;
}

.home__bar {
  position: absolute;
  bottom: 0;
  left: -10%;
  width: 1000%;
  height: 9rem;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 1rem;
  border: 2px solid #ffffff;
}

.home__bar__text {
  color: #ffffff;
  text-align: center;
}

@keyframes home__title__animaition {
  0% {
    width: 0%;
  }
  50% {
    width: 100%;
  }
  100% {
    width: 0%;
  }
}
@keyframes home__hero__textAnimate {
  from {
    left: -300%;
  }
  to {
    left: 100%;
  }
}
.home__intro {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  gap: 2rem;
  padding-top: 13rem;
  border-bottom: 0.3rem solid #ffffff;
  position: relative;
}

.home__intro__greeting {
  overflow: hidden;
}

.home__intro__introduction {
  width: 80%;
  z-index: 1;
}

.home__intro__image {
  position: absolute;
  right: 0%;
  top: 5%;
  width: 20%;
  max-height: 90%;
}
@media (max-width: 767px) {
  .home__intro__image {
    width: 50%;
  }
}

.home__intro__span {
  border-bottom: 0.5rem solid #D2001A;
}

.home__interesting {
  width: 100%;
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(3, 1fr);
  border-bottom: 0.3rem solid #ffffff;
}
@media (max-width: 767px) {
  .home__interesting {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
  }
}

.home__interesting__para {
  grid-column-start: 4;
  grid-column-end: 13;
  overflow: hidden;
}
.home__interesting__para:nth-of-type(2) {
  grid-row-start: 2;
  grid-row-end: 3;
}

.home__interesting__works {
  display: flex;
  grid-column-start: 4;
  grid-column-end: 13;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
}

.interesting__works__title {
  cursor: pointer;
}

.interesting__works__para {
  width: 50%;
}

.home__about {
  width: 100%;
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(3, 1fr);
  position: relative;
  border-bottom: 0.3rem solid #ffffff;
}
@media (max-width: 767px) {
  .home__about {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
  }
}

.home__about__social {
  grid-column-start: 2;
  grid-row-start: 2;
  gap: 3.2rem;
  display: flex;
  flex-direction: column;
}

.about__social__title {
  overflow: hidden;
}

.about__social__item {
  cursor: pointer;
}

.home__about__journey {
  grid-column-start: 4;
  grid-column-end: 9;
  grid-row-start: 2;
  padding: 0.2rem;
  overflow: hidden;
  word-spacing: 0.2rem;
}

.home__about__made {
  grid-column-start: 10;
  grid-column-end: 13;
  grid-row-start: 2;
  gap: 1rem;
}

.about__made__me {
  grid-row-start: 10;
  text-transform: uppercase;
  cursor: pointer;
}

.home__hobby {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: flex-start;
  width: 100%;
  height: 100vh;
  border-bottom: 0.3rem solid #ffffff;
}

.hobby__container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
}

.home__hobby__para {
  width: 40%;
}

.home__contact {
  width: 100%;
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(4, 1fr);
  align-items: center;
  position: relative;
}
@media (max-width: 767px) {
  .home__contact {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: flex-start;
  }
}

.home__contact__msg {
  grid-column-start: 2;
  grid-column-end: 5;
  grid-row-start: 1;
}
.home__contact__msg:nth-last-of-type(2) {
  grid-column-start: 7;
  grid-column-end: 10;
}

.home__contact__email {
  grid-column-start: 1;
  grid-column-end: 10;
  grid-row-start: 2;
  cursor: pointer;
  overflow: hidden;
}
@media (max-width: 767px) {
  .home__contact__email {
    font-size: 8rem;
  }
}

.home____thanks__msg {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 3;
  text-transform: uppercase;
  overflow: hidden;
}

.home__thanks__social {
  display: flex;
  flex-direction: row;
  grid-row-start: 4;
  grid-column-start: 1;
  gap: 5rem;
}

.home__end {
  display: flex;
  width: 100%;
  height: 100vh;
  position: relative;
  opacity: 0;
  transition: opacity 4s ease-in;
}
.home__end.active {
  opacity: 1;
}

.home__end__points {
  position: absolute;
  width: 2rem;
  height: 2rem;
  background-color: #ffffff;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  color: #000000;
  font-family: "Montserrat";
  cursor: pointer;
}
.home__end__points:first-child {
  top: 20%;
  left: 48%;
}
.home__end__points:nth-child(2) {
  top: 40%;
  left: 60%;
}
.home__end__points:nth-child(3) {
  top: 70%;
  left: 45%;
}
.home__end__points:last-child {
  top: 50%;
  left: 50%;
}

.work {
  overflow: hidden;
  background-color: rgba(0, 0, 0, 0.5);
}

.work__wrapper {
  overflow: hidden;
  padding: 10rem 5rem 70rem 5rem;
}

.work__title {
  color: #ffffff;
  margin-bottom: 5rem;
}

.work__works__container {
  display: flex;
  flex-direction: column;
  margin: 5rem;
  border-bottom: 0.4rem solid #ffffff;
}

.works__container__title {
  color: #ffffff;
  cursor: pointer;
  position: relative;
}

.works__container__line {
  height: 2rem;
  width: 100%;
  display: block;
}

.works__container__line__path {
  stroke: #ffffff;
  fill: none;
}

.works__container__content {
  height: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  width: 50%;
  transition: 2s ease;
  opacity: 0;
  background-color: rgba(0, 0, 0, 0.5);
  color: #ffffff;
  padding: 2rem;
}
@media (max-width: 767px) {
  .works__container__content {
    width: 90%;
  }
}

.works__content__item {
  display: flex;
  flex-direction: row;
  gap: 2rem;
}

.work__works__container:hover .works__container__content {
  opacity: 1;
  height: 40vh;
}

.works__content__btn {
  width: 10rem;
  height: 10rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 1rem;
  background-color: #000000;
  color: #ffffff;
  transition: 0.35s ease-in-out;
}
.works__content__btn:hover {
  background-color: #D2001A;
  color: #000000;
}

.skills {
  overflow: hidden;
}

.skills__wrapper {
  overflow: hidden;
  padding: 15rem;
  display: flex;
}
@media (max-width: 767px) {
  .skills__wrapper {
    padding: 8rem;
  }
}

.skills__title {
  color: #ffffff;
}

.skills__point {
  position: absolute;
  width: 5rem;
  height: 5rem;
  background-color: #ffffff;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: 0.35 ease-in-out;
  left: 50%;
  top: 30%;
}

.skills__point:hover .skills__point__container {
  opacity: 1;
}

.skills__point.visible {
  opacity: 1;
}

.skills__point__container {
  position: absolute;
  display: flex;
  flex-direction: column;
  transition: 0.35s ease;
  opacity: 0;
  left: 100%;
  z-index: 2;
  background-color: rgba(0, 0, 0, 0.5);
}

.skills__point__title {
  color: #ffffff;
}

.skills__point__skill {
  display: flex;
  align-items: center;
  padding: 1rem;
  gap: 1rem;
}

.skills__skill__name {
  color: #ffffff;
}

.skills__skill__image {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
}

.gallery__scroll__images {
  height: 11200px;
  opacity: 1;
}

.gallery__images__image {
  display: block;
  object-fit: contain;
  width: 100%;
  height: 100%;
}

#headlines {
  position: absolute;
  max-width: 800px;
  min-width: 450px;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

#detail {
  position: absolute;
  width: 100%;
  height: 100%;
  background: #111;
  top: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  z-index: 3;
  justify-content: space-evenly;
}

#detailImg {
  width: 85%;
  height: 85%;
  object-fit: contain;
}

#detailTxt {
  color: #ccc;
  font-size: 20px;
  letter-spacing: 1px;
}

.spotify {
  overflow: hidden;
}

.spotify__wrapper {
  display: flex;
  flex-direction: row;
  color: #ffffff;
  padding: 10rem 5rem;
}
@media (max-width: 767px) {
  .spotify__wrapper {
    padding: 5rem;
    flex-direction: column;
  }
}

.spotify__hero {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  gap: 4rem;
}
@media (max-width: 767px) {
  .spotify__hero {
    gap: 2rem;
    align-items: center;
  }
}

.spotify__hero__image {
  width: 60rem;
  height: 30rem;
}

@media (max-width: 767px) {
  .spotify__hero__title {
    text-align: center;
  }
}

.spotify__hero__btn {
  cursor: pointer;
}

.spotify__musics {
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 2;
}

.spotify__musics__wrapper {
  background-color: #171414;
  width: 60%;
  height: 90%;
  border-radius: 5rem;
  padding: 2rem 2rem;
  overflow-x: hidden;
  overflow-y: scroll;
}
@media (max-width: 767px) {
  .spotify__musics__wrapper {
    width: 80%;
  }
}
.spotify__musics__wrapper::-webkit-scrollbar {
  width: 0.3rem;
  height: 90%;
}
.spotify__musics__wrapper::-webkit-scrollbar-thumb {
  background-color: #D2001A;
  border-radius: 1rem;
}

.spotify__musics__item {
  height: 10rem;
  width: 100%;
  border-bottom: 0.2rem solid #ffffff;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.music__item__image {
  object-fit: cover;
  border-radius: 50%;
  width: 6rem;
  height: 6rem;
  margin-right: 2rem;
}

.music__item__title {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  min-width: 30rem;
}
@media (max-width: 767px) {
  .music__item__title {
    min-width: 25rem;
  }
}

.music__item__duration {
  margin-right: 10rem;
}

.music__item__play {
  width: 5rem;
  height: 5rem;
  cursor: pointer;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/