/*! For license information please see main.9b469111ca1c7c17b4d7.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateportfolio_hursun_2("main",{"./app/index.js":(e,t,s)=>{s.r(t);var n=s("./node_modules/lodash/each.js"),a=s("./node_modules/normalize-wheel/index.js"),i=s("./app/components/canvas/index.js"),o=s("./app/components/Header.js"),h=s("./app/components/Preloader.js"),r=s("./app/pages/home/index.js"),d=s("./app/pages/works/index.js"),c=s("./app/pages/skills/index.js"),p=s("./app/pages/gallery/index.js"),l=s("./app/pages/spotify/index.js");new class{constructor(){this.prevUrl=window.location.href,this.createContent(),this.createCanvas(),this.createPreloader(),this.createHeader(),this.createPages(),this.addLinkListeners(),this.addEventListener(),this.update()}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createCanvas(){this.canvas=new i.default,this.canvas.onChange(this.template)}createPreloader(){this.preloader=new h.default({loadingManger:this.canvas.manager}),this.preloader.once("completed",this.onPreloaded.bind(this))}onPreloaded(){this.header.createAudio(),this.onResize(),this.page.show()}createHeader(){this.header=new o.default}createPages(){this.pages={home:new r.default,works:new d.default,skills:new c.default,gallery:new p.default,spotify:new l.default},this.page=this.pages[this.template],this.page.create()}async onChange(e){if(e!==this.prevUrl){"http://localhost:3000/gallery"===this.prevUrl&&(this.content.style.height="100%"),this.page.hide();const t=await window.fetch(e);if(200===t.status){const s=await t.text(),n=document.createElement("div");n.innerHTML=s,window.history.pushState({},"",e);const a=n.querySelector(".content");this.template=a.getAttribute("data-template"),this.content.setAttribute("data-template",this.template),this.content.innerHTML=a.innerHTML,this.page=this.pages[this.template],this.page.create(),this.canvas.onChange(this.template),this.onResize(),this.addLinkListeners(),this.page.show()}else console.log("Something went wrong")}this.prevUrl=e}addLinkListeners(){const e=document.querySelectorAll("a");n(e,(e=>{e.onclick=t=>{if(-1==="mailto:sshursun@gmail.com, https://www.instagram.com/__hursun_ss__/, https://twitter.com/hursun2004, https://www.linkedin.com/in/hursun-ss-377659233/".indexOf(e.href)){t.preventDefault();const{href:s}=e;this.onChange(s)}}}))}addEventListener(){window.addEventListener("resize",this.onResize.bind(this)),window.addEventListener("wheel",this.onScroll.bind(this)),window.addEventListener("mousemove",this.onMousemove.bind(this)),window.addEventListener("touchmove",this.onTouchMove.bind(this)),window.addEventListener("touchstart",this.onTouchStart.bind(this)),window.addEventListener("touchend",this.onTouchEnd.bind(this))}onResize(){window.requestAnimationFrame((()=>{this.page&&this.page.onResize&&this.page.onResize(),this.canvas&&this.canvas.onResize()&&this.canvas.onResize()}))}onScroll(e){const t=a(e);this.page&&this.page.onScroll&&this.page.onScroll(t),this.canvas&&this.canvas.onScroll&&this.canvas.onScroll(t)}onMousemove(e){this.canvas&&this.canvas.onMousemove&&this.canvas.onMousemove(e),this.page&&this.page.onMousemove&&this.page.onMousemove(e)}onTouchMove(e){}onTouchEnd(){}onTouchStart(){}update(){this.page&&this.page.update&&this.page.update(),this.canvas&&this.canvas.update&&this.canvas.update(),window.requestAnimationFrame(this.update.bind(this))}}}},(function(e){e.h=()=>"c04f693d4b112912298a"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,