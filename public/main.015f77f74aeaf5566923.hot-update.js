/*! For license information please see main.015f77f74aeaf5566923.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateportfolio_hursun_2("main",{"./app/components/canvas/home/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var i=s("./node_modules/three/build/three.module.js"),a=s("./node_modules/gsap/index.js"),r=s("./app/classes/Detection.js"),l=s("./node_modules/prefix/index.js"),o=s("./app/shaders/human/vertex.glsl"),c=s("./app/shaders/human/fragment.glsl"),n=s("./app/shaders/particle/vertex.glsl"),h=s("./app/shaders/particle/fragment.glsl");class d{constructor({scene:e,gltfLoader:t,camera:s,renderer:a}){this.scene=e,this.gltfLoader=t,this.camera=s,this.renderer=a,this.uniforms={time:{value:0},speed:{value:10},charSize:{value:{x:1,y:1}},charResolution:{value:10},color:{value:new i.Color("#D2001A")},resolution:{value:{x:2,y:2}}},this.scroll={target:0,current:0,limit:6e3},this.y={start:0,distance:0,end:0},this.transformPrefix=l("transform"),this.group=new i.Group,this.scene.add(this.group),this.createObject(),this.createParticle()}updateAllMaterial(){this.scene.traverse((e=>{e instanceof i.Mesh&&e.material instanceof i.MeshStandardMaterial&&(e.material.needsUpdate=!0)}))}createObject(){this.cube=new i.Mesh(new i.BoxGeometry(1,1,1),new i.MeshBasicMaterial),this.cube.position.set(0,-18,0),this.material=new i.RawShaderMaterial({vertexShader:o.default,fragmentShader:c.default,uniforms:this.uniforms}),this.gltfLoader.load("models/human/scene.gltf",(e=>{this.model=e.scene,this.model.children[0].children[0].children.forEach((e=>{e.material=this.material})),this.model.position.y=-16,this.group.add(this.model),this.updateAllMaterial()}))}createParticle(){const e=new Float32Array(3e4);for(let t=0;t<1e4;t++){const s=3*t;e[s]=100*(Math.random()-.5),e[s+1]=100*Math.random(),e[s+2]=100*(Math.random()-.5)}const t=new i.BufferGeometry;t.setAttribute("position",new i.BufferAttribute(e,3)),this.particleMaterial=new i.RawShaderMaterial({fragmentShader:h.default,vertexShader:n.default,depthWrite:!1,blending:i.AdditiveBlending,uniforms:{uTime:{value:0},uSize:{value:10*this.renderer.getPixelRatio()}}}),this.particle=new i.Points(t,this.particleMaterial),this.particle.position.y=-35,this.group.add(this.particle)}onScroll({pixelY:e}){this.scroll.target+=e}onTouchStart(e){this.y.start=e.touches[0].clientY}onTouchMove(e){this.y.start>e.touches[0].clientY?this.y.distance+=100:this.y.distance-=100}update(e){r.default.isDesktop()?this.scroll.target=a.default.utils.clamp(0,this.scroll.limit,this.scroll.target):this.scroll.target=a.default.utils.clamp(0,this.scroll.limit,this.y.distance),this.scroll.target<1&&(this.scroll.target=0),this.y.distance<.01&&(this.y.distance=0),console.log(this.scroll.limit,this.scroll.current),this.scroll.current=a.default.utils.interpolate(this.scroll.current,this.scroll.target,.01),this.head&&(this.head.rotation.y=e),this.particleMaterial&&(this.particleMaterial.uniforms.uTime.value=e),this.scroll.current<5400?(this.camera.rotation.x=3e-4*this.scroll.current,this.camera.rotation.y=.001*this.scroll.current,this.camera.position.z=5*Math.cos(.001*this.scroll.current),this.camera.position.y=1e-4*-this.scroll.current,this.camera.position.x=5*Math.sin(.001*this.scroll.current),document.querySelector(".home__end").classList.remove("active")):(a.default.to(this.camera.position,{x:0,y:-6,z:15,duration:6,ease:"expo.out"}),a.default.to(this.camera.rotation,{x:0,y:0,z:0,duration:1}),document.querySelector(".home__end").classList.add("active")),this.uniforms.time.value=e}destroy(){this.scene.remove(this.group)}}}},(function(e){e.h=()=>"147be76bcfc75acd43ea"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,